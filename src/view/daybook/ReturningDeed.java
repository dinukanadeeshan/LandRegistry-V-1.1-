/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.daybook;

import controller.ClientController;
import controller.DayBookController;
import controller.DeedController;
import controller.ReturningDetailController;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.Client;
import model.ReturningDetail;
import others.ComboSearchNew;
import others.IdGen;
import others.Validation;
import view.deed.ViewDeedsToReturn;
import view.registration.NewRegistration;

/**
 *
 * @author Nadeeshan
 */
public class ReturningDeed extends javax.swing.JDialog {

    Date date;
    DateFormat dateFormat;
    ArrayList<String> deedInfo;
    NumberFormat numberFormat;
    ViewDeedsToReturn dialog;
    Frame parent;

    /**
     * Creates new form ReturningDeed
     */
    public ReturningDeed(java.awt.Frame parent, boolean modal) {
        super(parent, "Return The Deed", true);
        initComponents();
        setLocation(430, 85);
        numberFormat = NumberFormat.getCurrencyInstance();
        initDayBookNoComboBox();
        date = new Date();
        dateFormat = DateFormat.getDateInstance(DateFormat.MEDIUM);
        dateText.setText(dateFormat.format(date));
        new ComboSearchNew().setSearchableCombo(dayBookNoComboBox, true, "No Matches Founded...", remarkTextArea);

    }

    public ReturningDeed(Frame parent, boolean modal, String dayBookNo, ViewDeedsToReturn dialog) {
        super(parent, "Return The Deed", true);
        this.dialog = dialog;
        initComponents();
        setLocationRelativeTo(null);
        numberFormat = NumberFormat.getCurrencyInstance();
        initDayBookNoComboBox();
        date = new Date();
        dateFormat = DateFormat.getDateInstance(DateFormat.MEDIUM);
        dateText.setText(dateFormat.format(date));
        new ComboSearchNew().setSearchableCombo(dayBookNoComboBox, true, "No Matches Founded...", remarkTextArea);
        dayBookNoComboBox.setSelectedItem(dayBookNo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dayBookNoComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        deedDateLabel = new javax.swing.JLabel();
        deedValueLabel = new javax.swing.JLabel();
        notryNoLabel = new javax.swing.JLabel();
        natureOfDeedText = new javax.swing.JTextField();
        deedValueText = new javax.swing.JTextField();
        notryNoText = new javax.swing.JTextField();
        deedTypeText = new javax.swing.JTextField();
        deedDateText = new javax.swing.JTextField();
        regDutyText = new javax.swing.JTextField();
        regDutyLabel = new javax.swing.JLabel();
        notryLabel = new javax.swing.JLabel();
        natureOfDeedLabel = new javax.swing.JLabel();
        deedTypeLabel = new javax.swing.JLabel();
        notryText = new javax.swing.JTextField();
        dateText = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        codeText = new javax.swing.JTextField();
        codeLabel = new javax.swing.JLabel();
        clientNameLabel = new javax.swing.JLabel();
        clientNameText = new javax.swing.JTextField();
        addressText = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarkTextArea = new javax.swing.JTextArea();
        remarkLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Returing Deed");

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        jLabel1.setText("Day Book No");

        dayBookNoComboBox.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 15)); // NOI18N
        dayBookNoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayBookNoComboBoxActionPerformed(evt);
            }
        });
        dayBookNoComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayBookNoComboBoxKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Deed Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        deedDateLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        deedDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deedDateLabel.setText("Deed Date");

        deedValueLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        deedValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deedValueLabel.setText("Deed Value");

        notryNoLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryNoLabel.setText("Deed No");

        natureOfDeedText.setEditable(false);
        natureOfDeedText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        natureOfDeedText.setFocusable(false);
        natureOfDeedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureOfDeedTextActionPerformed(evt);
            }
        });

        deedValueText.setEditable(false);
        deedValueText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        deedValueText.setFocusable(false);
        deedValueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deedValueTextActionPerformed(evt);
            }
        });

        notryNoText.setEditable(false);
        notryNoText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        notryNoText.setFocusable(false);
        notryNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notryNoTextActionPerformed(evt);
            }
        });

        deedTypeText.setEditable(false);
        deedTypeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        deedTypeText.setFocusable(false);
        deedTypeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deedTypeTextActionPerformed(evt);
            }
        });

        deedDateText.setEditable(false);
        deedDateText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        deedDateText.setFocusable(false);

        regDutyText.setEditable(false);
        regDutyText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        regDutyText.setFocusable(false);
        regDutyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regDutyTextActionPerformed(evt);
            }
        });

        regDutyLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        regDutyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        regDutyLabel.setText("Reg Duty");

        notryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryLabel.setText("Notry");

        natureOfDeedLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        natureOfDeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        natureOfDeedLabel.setText("Nature of Deed");

        deedTypeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        deedTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deedTypeLabel.setText("Book Type");

        notryText.setEditable(false);
        notryText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        notryText.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deedValueLabel)
                            .addComponent(notryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(deedValueText)
                                .addGap(49, 49, 49))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(notryText, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(notryNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(regDutyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(deedDateLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(deedTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deedDateText)
                            .addComponent(deedTypeText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(natureOfDeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(notryNoText, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(natureOfDeedText)
                    .addComponent(regDutyText))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deedDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deedDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deedTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deedTypeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(natureOfDeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(natureOfDeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notryNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notryNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(regDutyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deedValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regDutyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deedValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deedTypeText, deedValueText, notryText});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {natureOfDeedText, notryNoText, regDutyText});

        dateText.setEditable(false);
        dateText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        dateText.setFocusable(false);

        dateLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("Date ");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Given By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        codeText.setEditable(false);
        codeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        codeText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        codeText.setFocusable(false);
        codeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextActionPerformed(evt);
            }
        });
        codeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codeTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codeTextKeyReleased(evt);
            }
        });

        codeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        codeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codeLabel.setText("Code");

        clientNameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        clientNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clientNameLabel.setText("Name");

        clientNameText.setEditable(false);
        clientNameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        clientNameText.setFocusable(false);
        clientNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientNameTextActionPerformed(evt);
            }
        });
        clientNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientNameTextKeyReleased(evt);
            }
        });

        addressText.setEditable(false);
        addressText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        addressText.setFocusable(false);
        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });

        addressLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLabel.setText("Address");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(codeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clientNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(clientNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addressText))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        remarkTextArea.setColumns(20);
        remarkTextArea.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        remarkTextArea.setLineWrap(true);
        remarkTextArea.setRows(5);
        remarkTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                remarkTextAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(remarkTextArea);

        remarkLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        remarkLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remarkLabel.setText("Remark");

        confirmButton.setFont(new java.awt.Font("Lucida Bright", 1, 17)); // NOI18N
        confirmButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/dialog-accept.png"))); // NOI18N
        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        confirmButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmButtonKeyPressed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Lucida Bright", 1, 17)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/edit-delete-7.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(remarkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dayBookNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayBookNoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remarkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deedTypeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deedTypeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deedTypeTextActionPerformed

    private void natureOfDeedTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natureOfDeedTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_natureOfDeedTextActionPerformed

    private void regDutyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regDutyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regDutyTextActionPerformed

    private void notryNoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notryNoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notryNoTextActionPerformed

    private void deedValueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deedValueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deedValueTextActionPerformed

    private void codeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextActionPerformed

        if (codeText.getText().equals("")) {
            try {
                codeText.setText(IdGen.getNextClient());
                clientNameText.setEditable(true);
                clientNameText.setFocusable(true);
                clientNameText.setText("");
                addressText.setEditable(true);
                addressText.setFocusable(true);
                addressText.setText("");
                clientNameText.requestFocus();

            } catch (SQLException ex) {
                Logger.getLogger(NewDayBookEntry.class.getName()).log(Level.SEVERE, null, ex);

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NewDayBookEntry.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            try {
                Client client = ClientController.searchClientByCode(codeText.getText());
                clientNameText.setText(client.getName());
                addressText.setText(client.getAddress());
                clientNameText.setEditable(false);
                addressText.setEditable(false);
                remarkTextArea.requestFocus();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NewDayBookEntry.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
//                if (ex.getMessage().contains("empty result set")) {
//                    try {
//                        Notry notry = NotryController.getNotry(codeText.getText());
//                        clientNameText.setText(notry.getName());
//                        addressText.setText(notry.getAddress());
//                        clientNameText.setEditable(false);
//                        addressText.setEditable(false);
//                        bookTypeCombo.requestFocus();
//                        initNotryComboBox();
//                        notryComboBox.setSelectedItem(notry.toString());
//                        ClientController.addClient(new Client(notry.getNotryCode(), notry.getName(), notry.getAddress()));
//                    } catch (ClassNotFoundException ex1) {
//                        Logger.getLogger(NewDayBookEntry.class.getName()).log(Level.SEVERE, null, ex1);
//                    } catch (SQLException ex1) {
//
//                        if (ex1.getMessage().contains("empty result set")) {
//                            int res = JOptionPane.showConfirmDialog(this, "No Record Found!!\n\n Do you want to add Notry?", "Empty results", JOptionPane.YES_NO_OPTION);
//                            if (res == 0) {
//                                new AddNotry(parent, true, this).show();
//
//                            }else if(res == 1){
//                                codeText.setText("");
//                                clientNameText.setText("");
//                                addressText.setText("");
//                                codeText.requestFocus();
//                            }
//                        }
//                    }
//                }
            }

        }

    }//GEN-LAST:event_codeTextActionPerformed

    private void codeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTextKeyPressed
    }//GEN-LAST:event_codeTextKeyPressed

    private void codeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeTextKeyReleased
    }//GEN-LAST:event_codeTextKeyReleased

    private void clientNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientNameTextActionPerformed
        addressText.requestFocus();
    }//GEN-LAST:event_clientNameTextActionPerformed

    private void clientNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientNameTextKeyReleased
        try {
            String text = clientNameText.getText();
            if (!Validation.validateName(text)) {
                clientNameText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_clientNameTextKeyReleased

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
    }//GEN-LAST:event_addressTextActionPerformed

    private void dayBookNoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayBookNoComboBoxActionPerformed
        try {
            deedInfo = null;
            deedInfo = DeedController.getDeedInfo(dayBookNoComboBox.getSelectedItem().toString());
            deedTypeText.setText(deedInfo.get(0));
            natureOfDeedText.setText(deedInfo.get(1));
            notryText.setText(deedInfo.get(2));
            notryNoText.setText(deedInfo.get(3));
            deedDateText.setText(deedInfo.get(4));
            deedValueText.setText(deedInfo.get(5));
            regDutyText.setText(numberFormat.format(Double.parseDouble(deedInfo.get(6))).substring(1));
            Client client = ClientController.getClient(dayBookNoComboBox.getSelectedItem().toString());
            codeText.setText(client.getClientId());
            clientNameText.setText(client.getName());
            addressText.setText(client.getAddress());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dayBookNoComboBoxActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        try {
            String dayBookNo = dayBookNoComboBox.getSelectedItem().toString();
            String[] currDate = DateFormat.getDateInstance(DateFormat.SHORT).format(date).split("/");
            String returningDate = currDate[2] + "/" + currDate[1] + "/" + currDate[0];
            String remark = remarkTextArea.getText();
            String clientCode = codeText.getText();
            int res = ReturningDetailController.addReturnigDetail(new ReturningDetail(dayBookNo, returningDate, remark, clientCode));
            if (res > 0) {
                JLabel messageLabel = new JLabel( "Done Successfully..");
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this,messageLabel, "" , JOptionPane.INFORMATION_MESSAGE);
                initDayBookNoComboBox();
                dayBookNoComboBox.setSelectedIndex(0);
                codeText.setText("");
                clientNameText.setText("");
                addressText.setText("");
                remarkTextArea.setText("");
                deedDateText.setText("");
                deedTypeText.setText("");
                natureOfDeedText.setText("");
                notryText.setText("");
                notryNoText.setText("");
                deedValueText.setText("");
                regDutyText.setText("");
                dayBookNoComboBox.requestFocus();
                

            }
            if (dialog != null) {
                this.dispose();
                dialog.reload();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturningDeed.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReturningDeed.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void remarkTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remarkTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            confirmButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confirmButton.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            dayBookNoComboBox.requestFocus();
        }
    }//GEN-LAST:event_remarkTextAreaKeyPressed

    private void dayBookNoComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayBookNoComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            remarkTextArea.requestFocus();
        }
    }//GEN-LAST:event_dayBookNoComboBoxKeyPressed

    private void confirmButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            remarkTextArea.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confirmButton.doClick();
        }
    }//GEN-LAST:event_confirmButtonKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturningDeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturningDeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturningDeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturningDeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                ReturningDeed dialog = new ReturningDeed(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel clientNameLabel;
    private javax.swing.JTextField clientNameText;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeText;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField dateText;
    private javax.swing.JComboBox dayBookNoComboBox;
    private javax.swing.JLabel deedDateLabel;
    private javax.swing.JTextField deedDateText;
    private javax.swing.JLabel deedTypeLabel;
    private javax.swing.JTextField deedTypeText;
    private javax.swing.JLabel deedValueLabel;
    private javax.swing.JTextField deedValueText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel natureOfDeedLabel;
    private javax.swing.JTextField natureOfDeedText;
    private javax.swing.JLabel notryLabel;
    private javax.swing.JLabel notryNoLabel;
    private javax.swing.JTextField notryNoText;
    private javax.swing.JTextField notryText;
    private javax.swing.JLabel regDutyLabel;
    private javax.swing.JTextField regDutyText;
    private javax.swing.JLabel remarkLabel;
    private javax.swing.JTextArea remarkTextArea;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    private void initDayBookNoComboBox() {
        dayBookNoComboBox.removeAllItems();
        try {
            ArrayList<String> registeredDayBookNoList = DayBookController.getDueToReturnDayBookNo();
            for (int i = 0; i < registeredDayBookNoList.size(); i++) {
                String dayBookNo = registeredDayBookNoList.get(i);
                dayBookNoComboBox.addItem(dayBookNo);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturningDeed.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReturningDeed.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (dayBookNoComboBox.getItemCount() == 0) {
            dayBookNoComboBox.addItem("No any Deed to Return!!");
            confirmButton.setEnabled(false);
        } else {
            confirmButton.setEnabled(true);
        }
    }
}
