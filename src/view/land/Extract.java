/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.land;

import controller.LandController;
import controller.RegistrationController;
import java.awt.Container;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Land;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;
import others.Validation;

/**
 *
 * @author Nadeeshan
 */
public class Extract extends javax.swing.JDialog {

    ArrayList<String> landInfo;
    ArrayList<ArrayList<String>> splitLandInfoList;
    JDialog jasperDialog;
    DefaultTableModel tableModel;
    JRTableModelDataSource dataSource;
    Map<String, Object> param;
    JasperReport jr;
    JasperPrint jp;
    JasperViewer jasperViewer;
    Container contentPane;

    /**
     * Creates new form Extract
     */
    public Extract(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocation(406, 10);
        try {
            jr = JasperCompileManager.compileReport("./src/reports/FolioCopyReport.jrxml");
        } catch (JRException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        landInfoPanel = new javax.swing.JPanel();
        southText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        extentLabel = new javax.swing.JLabel();
        roodText = new javax.swing.JTextField();
        roodLabel = new javax.swing.JLabel();
        northLabel = new javax.swing.JLabel();
        southLabel = new javax.swing.JLabel();
        localAuthorityLabel = new javax.swing.JLabel();
        acreText = new javax.swing.JTextField();
        boundaryLabel = new javax.swing.JLabel();
        perchLabel = new javax.swing.JLabel();
        eastLabel = new javax.swing.JLabel();
        acreLabel = new javax.swing.JLabel();
        perchText = new javax.swing.JTextField();
        westLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        localAuthorityText = new javax.swing.JTextField();
        villageText = new javax.swing.JTextField();
        villageLabel = new javax.swing.JLabel();
        northText = new javax.swing.JTextField();
        eastText = new javax.swing.JTextField();
        westText = new javax.swing.JTextField();
        volumeLabel = new javax.swing.JLabel();
        landLabel = new javax.swing.JLabel();
        folioText = new javax.swing.JTextField();
        folioLabel = new javax.swing.JLabel();
        volumeText = new javax.swing.JTextField();
        closeBotton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        splitInfoTextArea = new javax.swing.JTextArea();
        tableScrollPane = new javax.swing.JScrollPane();
        tablePanel = new javax.swing.JPanel();
        landRegisrationInfoScrollPanel = new javax.swing.JScrollPane();
        landRegistrationInfoTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Extract");

        landInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Land Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        southText.setEditable(false);
        southText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        southText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southTextActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        extentLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        extentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        extentLabel.setText("Extent");

        roodText.setEditable(false);
        roodText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        roodText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        roodText.setText("0");
        roodText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roodTextActionPerformed(evt);
            }
        });

        roodLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        roodLabel.setText("Rood");

        northLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        northLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        northLabel.setText("North");

        southLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        southLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        southLabel.setText("South");

        localAuthorityLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        localAuthorityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        localAuthorityLabel.setText("Local Authority");

        acreText.setEditable(false);
        acreText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        acreText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        acreText.setText("0");
        acreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acreTextActionPerformed(evt);
            }
        });

        boundaryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 16)); // NOI18N
        boundaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        boundaryLabel.setText("Boundary :");

        perchLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        perchLabel.setText("Perch");

        eastLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        eastLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        eastLabel.setText("East");

        acreLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        acreLabel.setText("Acre");

        perchText.setEditable(false);
        perchText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        perchText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        perchText.setText("0");
        perchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perchTextActionPerformed(evt);
            }
        });

        westLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        westLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        westLabel.setText("West");

        nameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name");

        localAuthorityText.setEditable(false);
        localAuthorityText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        villageText.setEditable(false);
        villageText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        villageLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        villageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        villageLabel.setText("Village");

        northText.setEditable(false);
        northText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        northText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northTextActionPerformed(evt);
            }
        });

        eastText.setEditable(false);
        eastText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        eastText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastTextActionPerformed(evt);
            }
        });

        westText.setEditable(false);
        westText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        westText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout landInfoPanelLayout = new javax.swing.GroupLayout(landInfoPanel);
        landInfoPanel.setLayout(landInfoPanelLayout);
        landInfoPanelLayout.setHorizontalGroup(
            landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landInfoPanelLayout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(roodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
            .addGroup(landInfoPanelLayout.createSequentialGroup()
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(landInfoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boundaryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(landInfoPanelLayout.createSequentialGroup()
                                .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eastText))
                            .addGroup(landInfoPanelLayout.createSequentialGroup()
                                .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(landInfoPanelLayout.createSequentialGroup()
                                .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(southText))
                            .addGroup(landInfoPanelLayout.createSequentialGroup()
                                .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(westText))))
                    .addGroup(landInfoPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(localAuthorityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(localAuthorityText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landInfoPanelLayout.createSequentialGroup()
                                .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(landInfoPanelLayout.createSequentialGroup()
                                .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landInfoPanelLayout.createSequentialGroup()
                                .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))))
                    .addGroup(landInfoPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameText)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        landInfoPanelLayout.setVerticalGroup(
            landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landInfoPanelLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localAuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(localAuthorityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boundaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eastText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(westText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(southText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        volumeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        volumeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        volumeLabel.setText("Volume");

        landLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 16)); // NOI18N
        landLabel.setText("Land :");

        folioText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        folioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioTextActionPerformed(evt);
            }
        });
        folioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                folioTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                folioTextKeyReleased(evt);
            }
        });

        folioLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        folioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        folioLabel.setText("Folio");

        volumeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        volumeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTextActionPerformed(evt);
            }
        });
        volumeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                volumeTextKeyReleased(evt);
            }
        });

        closeBotton.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        closeBotton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/window-close-3.png"))); // NOI18N
        closeBotton.setText("Close");
        closeBotton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBottonActionPerformed(evt);
            }
        });

        printButton.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        printButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/printer-5.png"))); // NOI18N
        printButton.setText("Print");
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        printButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                printButtonKeyPressed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        viewButton.setText("View");
        viewButton.setEnabled(false);
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        splitInfoTextArea.setEditable(false);
        splitInfoTextArea.setColumns(20);
        splitInfoTextArea.setFont(new java.awt.Font("Lucida Sans Unicode", 2, 17)); // NOI18N
        splitInfoTextArea.setRows(5);
        splitInfoTextArea.setFocusable(false);
        jScrollPane1.setViewportView(splitInfoTextArea);

        tableScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        landRegisrationInfoScrollPanel.setAutoscrolls(true);

        landRegistrationInfoTable.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 17)); // NOI18N
        landRegistrationInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day Book No", "Nature", "Notry", "Deed No", "Value", "Grantor", "Grantee", "Note", "Reg. Duty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        landRegistrationInfoTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        landRegisrationInfoScrollPanel.setViewportView(landRegistrationInfoTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(landRegisrationInfoScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1569, Short.MAX_VALUE)
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(landRegisrationInfoScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 92, Short.MAX_VALUE))
        );

        tableScrollPane.setViewportView(tablePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(landLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(folioLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(landInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(closeBotton)
                        .addGap(69, 69, 69))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeBotton, printButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(landLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(landInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBotton)
                    .addComponent(printButton))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closeBotton, printButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void southTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southTextActionPerformed
        volumeText.requestFocus();
    }//GEN-LAST:event_southTextActionPerformed

    private void roodTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roodTextActionPerformed
        perchText.requestFocus();
    }//GEN-LAST:event_roodTextActionPerformed

    private void acreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acreTextActionPerformed
        roodText.requestFocus();
    }//GEN-LAST:event_acreTextActionPerformed

    private void perchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perchTextActionPerformed
        northText.requestFocus();
    }//GEN-LAST:event_perchTextActionPerformed

    private void northTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northTextActionPerformed
        westText.requestFocus();
    }//GEN-LAST:event_northTextActionPerformed

    private void eastTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastTextActionPerformed
        southText.requestFocus();
    }//GEN-LAST:event_eastTextActionPerformed

    private void westTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westTextActionPerformed
        eastText.requestFocus();
    }//GEN-LAST:event_westTextActionPerformed

    private void folioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioTextActionPerformed
        if (!folioText.getText().equals("")) {
            viewButton.doClick();
        }
    }//GEN-LAST:event_folioTextActionPerformed

    private void folioTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyReleased
        try {
            String text = folioText.getText();
            if (!Validation.validateInt(text)) {
                int caretPosition = folioText.getCaretPosition();
                folioText.setText(text.substring(0, caretPosition - 1) + "" + text.substring(caretPosition));
                folioText.setCaretPosition(caretPosition - 1);
            }
        } catch (Exception e) {
        }
        setViewButtonEnability();
    }//GEN-LAST:event_folioTextKeyReleased

    private void volumeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTextActionPerformed
        folioText.requestFocus();
    }//GEN-LAST:event_volumeTextActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        try {
            initLandInfo();
            int rowCount = landRegistrationInfoTable.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                ((DefaultTableModel) landRegistrationInfoTable.getModel()).removeRow(0);
            }
            ArrayList<ArrayList<String>> registrationInfoList = RegistrationController.getRegistrationInfo(volumeText.getText(), folioText.getText());
            for (int i = 0; i < registrationInfoList.size(); i++) {
                ArrayList<String> registrationInfo = registrationInfoList.get(i);
                String notry = registrationInfo.get(2) + " - " + registrationInfo.get(3);
                String grantor = registrationInfo.get(6) + " - " + registrationInfo.get(7);
                String grantee = registrationInfo.get(8) + " - " + registrationInfo.get(9);
                ((DefaultTableModel) landRegistrationInfoTable.getModel()).addRow(new Object[]{registrationInfo.get(0), registrationInfo.get(1), notry, registrationInfo.get(4), registrationInfo.get(5), grantor, grantee, registrationInfo.get(10), registrationInfo.get(11)});
            }
            printButton.setEnabled(true);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
            if (ex.getMessage().contains("empty result set")) {
                JLabel messageLabel = new JLabel("<html>No Land found for " + volumeText.getText() + " - " + folioText.getText() + "<br> Check again Volume & folio..</html>");
                messageLabel.setFont(new Font("Lucida Sans Unicode", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLabel);
                volumeText.requestFocus();
            }
        }
        try {
            splitLandInfoList = LandController.getSplitedLandInfo(landInfo.get(10));
            if (!splitLandInfoList.isEmpty()) {
                DefaultTableModel tableModel = new DefaultTableModel(new String[]{"Land Name", "Volume", "Folio"}, 0);
                for (ArrayList<String> splitLandInfo : splitLandInfoList) {
                    tableModel.addRow(new String[]{splitLandInfo.get(3), splitLandInfo.get(1), splitLandInfo.get(2)});
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (landInfo.get(11) != null) {
            Land parentLand = null;
            try {
                parentLand = LandController.getLand(landInfo.get(11));
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
            }
            splitInfoTextArea.setText("\n This Land is Splitted from Land Named  \"" + parentLand.getName() + "\" \n VOLUME :- \"" + parentLand.getVolume() + "\"   and FOLIO :- \"" + parentLand.getFolio() + "\"");
        }
        System.out.println(landInfo.get(11));
        try {
            tableModel = ((DefaultTableModel) landRegistrationInfoTable.getModel());
            dataSource = new JRTableModelDataSource(tableModel);
            param = new HashMap<String, Object>();
            param.put("Volume", volumeText.getText());
            param.put("Folio", folioText.getText());
            param.put("name", nameText.getText());
            param.put("north", northText.getText());
            param.put("south", southText.getText());
            param.put("west", westText.getText());
            param.put("east", eastText.getText());
            param.put("acre", acreText.getText());
            param.put("rood", roodText.getText());
            param.put("perch", perchText.getText());


            jp = JasperFillManager.fillReport(jr, param, dataSource);
            jasperViewer = new JasperViewer(jp, false);
            contentPane = jasperViewer.getContentPane();
            jasperDialog = new JDialog(this, false);
            jasperDialog.setContentPane(contentPane);
            jasperDialog.setTitle("Print Preview");
            jasperDialog.setSize(Toolkit.getDefaultToolkit().getScreenSize());
            jasperDialog.setLocationRelativeTo(this);
        } catch (JRException ex) {
            Logger.getLogger(Extract.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void closeBottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBottonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBottonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        if (jasperDialog != null) {
            jasperDialog.setVisible(true);
        }

    }//GEN-LAST:event_printButtonActionPerformed

    private void volumeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_volumeTextKeyReleased
        setViewButtonEnability();
    }//GEN-LAST:event_volumeTextKeyReleased

    private void folioTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            volumeText.requestFocus();
        }
        if (viewButton.isEnabled()) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                printButton.requestFocus();
            }
        }
    }//GEN-LAST:event_folioTextKeyPressed

    private void printButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_printButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            folioText.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            printButton.doClick();
        }
    }//GEN-LAST:event_printButtonKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Extract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Extract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Extract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Extract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                Extract dialog = new Extract(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acreLabel;
    private javax.swing.JTextField acreText;
    private javax.swing.JLabel boundaryLabel;
    private javax.swing.JButton closeBotton;
    private javax.swing.JLabel eastLabel;
    private javax.swing.JTextField eastText;
    private javax.swing.JLabel extentLabel;
    private javax.swing.JLabel folioLabel;
    private javax.swing.JTextField folioText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel landInfoPanel;
    private javax.swing.JLabel landLabel;
    private javax.swing.JScrollPane landRegisrationInfoScrollPanel;
    private javax.swing.JTable landRegistrationInfoTable;
    private javax.swing.JLabel localAuthorityLabel;
    private javax.swing.JTextField localAuthorityText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel northLabel;
    private javax.swing.JTextField northText;
    private javax.swing.JLabel perchLabel;
    private javax.swing.JTextField perchText;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel roodLabel;
    private javax.swing.JTextField roodText;
    private javax.swing.JLabel southLabel;
    private javax.swing.JTextField southText;
    private javax.swing.JTextArea splitInfoTextArea;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JButton viewButton;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JTextField villageText;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JTextField volumeText;
    private javax.swing.JLabel westLabel;
    private javax.swing.JTextField westText;
    // End of variables declaration//GEN-END:variables

    private void initLandInfo() throws NumberFormatException, SQLException, ClassNotFoundException {
        landInfo = null;
        landInfo = LandController.getLandInfo(volumeText.getText(), Integer.parseInt(folioText.getText()));
        nameText.setText(landInfo.get(0));
        localAuthorityText.setText(landInfo.get(1));
        villageText.setText(landInfo.get(2));
        acreText.setText(landInfo.get(3));
        roodText.setText(landInfo.get(4));
        perchText.setText(landInfo.get(5));
        northText.setText(landInfo.get(6));
        westText.setText(landInfo.get(7));
        eastText.setText(landInfo.get(8));
        southText.setText(landInfo.get(9));
    }

    private void setViewButtonEnability() {
        boolean condition = volumeText.getText().equals("") || folioText.getText().equals("");
        viewButton.setEnabled(!condition);
        printButton.setEnabled(!condition);
    }
}
