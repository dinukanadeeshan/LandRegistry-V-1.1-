/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.land;

import controller.LandController;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import others.Validation;
import view.registration.NewRegistration;

/**
 *
 * @author Nadeeshan
 */
public class RemoveLand extends javax.swing.JDialog {

    ArrayList<String> landInfo;

    /**
     * Creates new form RemoveLand
     */
    public RemoveLand(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocation(406, 90);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        landLabel = new javax.swing.JLabel();
        removeButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        folioText = new javax.swing.JTextField();
        folioLabel = new javax.swing.JLabel();
        volumeText = new javax.swing.JTextField();
        volumeLabel = new javax.swing.JLabel();
        landPanel = new javax.swing.JPanel();
        roodText = new javax.swing.JTextField();
        villageText = new javax.swing.JTextField();
        volumeLabel1 = new javax.swing.JLabel();
        perchText = new javax.swing.JTextField();
        westText = new javax.swing.JTextField();
        northText = new javax.swing.JTextField();
        acreLabel = new javax.swing.JLabel();
        landCodeText = new javax.swing.JTextField();
        eastText = new javax.swing.JTextField();
        acreText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        southLabel = new javax.swing.JLabel();
        eastLabel = new javax.swing.JLabel();
        localAuthorityLabel = new javax.swing.JLabel();
        northLabel = new javax.swing.JLabel();
        villageLabel = new javax.swing.JLabel();
        southText = new javax.swing.JTextField();
        westLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        boundaryLabel = new javax.swing.JLabel();
        perchLabel = new javax.swing.JLabel();
        localAuthorityText = new javax.swing.JTextField();
        roodLabel = new javax.swing.JLabel();
        extentLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Remove Land");

        landLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 17)); // NOI18N
        landLabel.setText("Land :");

        removeButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        folioText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        folioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioTextActionPerformed(evt);
            }
        });
        folioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                folioTextKeyReleased(evt);
            }
        });

        folioLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 17)); // NOI18N
        folioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        folioLabel.setText("Folio");

        volumeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        volumeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTextActionPerformed(evt);
            }
        });

        volumeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 17)); // NOI18N
        volumeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        volumeLabel.setText("Volume");

        landPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Land", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        roodText.setEditable(false);
        roodText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        roodText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        roodText.setText("0");
        roodText.setFocusable(false);
        roodText.setHighlighter(null);
        roodText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roodTextActionPerformed(evt);
            }
        });

        villageText.setEditable(false);
        villageText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        villageText.setFocusable(false);
        villageText.setHighlighter(null);

        volumeLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        volumeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        volumeLabel1.setText("Land Code");

        perchText.setEditable(false);
        perchText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        perchText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        perchText.setText("0");
        perchText.setFocusable(false);
        perchText.setHighlighter(null);
        perchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perchTextActionPerformed(evt);
            }
        });

        westText.setEditable(false);
        westText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        westText.setFocusable(false);
        westText.setHighlighter(null);
        westText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westTextActionPerformed(evt);
            }
        });

        northText.setEditable(false);
        northText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        northText.setFocusable(false);
        northText.setHighlighter(null);
        northText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northTextActionPerformed(evt);
            }
        });

        acreLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        acreLabel.setText("Acre");

        landCodeText.setEditable(false);
        landCodeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        landCodeText.setFocusable(false);
        landCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                landCodeTextActionPerformed(evt);
            }
        });
        landCodeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                landCodeTextFocusGained(evt);
            }
        });
        landCodeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                landCodeTextKeyPressed(evt);
            }
        });

        eastText.setEditable(false);
        eastText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        eastText.setFocusable(false);
        eastText.setHighlighter(null);
        eastText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastTextActionPerformed(evt);
            }
        });

        acreText.setEditable(false);
        acreText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        acreText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        acreText.setText("0");
        acreText.setFocusable(false);
        acreText.setHighlighter(null);
        acreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acreTextActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        nameText.setFocusable(false);
        nameText.setHighlighter(null);

        southLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        southLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        southLabel.setText("South");

        eastLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        eastLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        eastLabel.setText("East");

        localAuthorityLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        localAuthorityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        localAuthorityLabel.setText("Local Authority ");

        northLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        northLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        northLabel.setText("North");

        villageLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        villageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        villageLabel.setText("Village");

        southText.setEditable(false);
        southText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        southText.setFocusable(false);
        southText.setHighlighter(null);
        southText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southTextActionPerformed(evt);
            }
        });
        southText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                southTextFocusGained(evt);
            }
        });

        westLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        westLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        westLabel.setText("West");

        nameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name");

        boundaryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        boundaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        boundaryLabel.setText("Boundary :");

        perchLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        perchLabel.setText("Perch");

        localAuthorityText.setEditable(false);
        localAuthorityText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        localAuthorityText.setFocusable(false);
        localAuthorityText.setHighlighter(null);

        roodLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        roodLabel.setText("Rood");

        extentLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        extentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        extentLabel.setText("Extent ");

        javax.swing.GroupLayout landPanelLayout = new javax.swing.GroupLayout(landPanel);
        landPanel.setLayout(landPanelLayout);
        landPanelLayout.setHorizontalGroup(
            landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landPanelLayout.createSequentialGroup()
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(landPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(landPanelLayout.createSequentialGroup()
                                .addComponent(boundaryLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(southText))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(northText)
                                            .addGroup(landPanelLayout.createSequentialGroup()
                                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(landPanelLayout.createSequentialGroup()
                                                        .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(13, 13, 13)
                                                        .addComponent(roodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(landPanelLayout.createSequentialGroup()
                                                        .addComponent(localAuthorityText, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eastText))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(westText))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(landPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nameLabel)
                                    .addComponent(volumeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addComponent(landCodeText))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landPanelLayout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(nameText)))
                        .addGap(8, 8, 8))
                    .addGroup(landPanelLayout.createSequentialGroup()
                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(localAuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        landPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acreText, perchText, roodText});

        landPanelLayout.setVerticalGroup(
            landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volumeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(landCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localAuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(localAuthorityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boundaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eastText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(westText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(southText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        landPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {acreText, perchText, roodText});

        landPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {localAuthorityText, villageText});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(landPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(landLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(folioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(removeButton)
                            .addGap(34, 34, 34)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(212, 212, 212)))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, removeButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(landLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(landPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {folioText, volumeText});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, removeButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volumeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTextActionPerformed
        folioText.requestFocus();
    }//GEN-LAST:event_volumeTextActionPerformed

    private void folioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioTextActionPerformed

        try {
            landInfo = null;
            landInfo = LandController.getLandInfo(volumeText.getText(), Integer.parseInt(folioText.getText()));
            nameText.setText(landInfo.get(0));
            localAuthorityText.setText(landInfo.get(1));
            villageText.setText(landInfo.get(2));
            acreText.setText(landInfo.get(3));
            roodText.setText(landInfo.get(4));
            perchText.setText(landInfo.get(5));
            northText.setText(landInfo.get(6));
            westText.setText(landInfo.get(7));
            eastText.setText(landInfo.get(8));
            southText.setText(landInfo.get(9));
            landCodeText.setText(landInfo.get(10));

            removeButton.requestFocus();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
            if (ex.getMessage().contains("empty result set")) {
                JLabel messageLabel = new JLabel("<html>No Land found for " + volumeText.getText() + " - " + folioText.getText() + "<br> Check again Volume & folio..</html>");
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLabel, "", JOptionPane.INFORMATION_MESSAGE);

            }
        }

    }//GEN-LAST:event_folioTextActionPerformed

    private void folioTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyReleased
        try {
            if (!Validation.validateInt(folioText.getText())) {
                folioText.setText(folioText.getText().substring(0, folioText.getText().length() - 1));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_folioTextKeyReleased

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        try {
            if (LandController.isLandRegistered(landCodeText.getText())) {
                int res = JOptionPane.showConfirmDialog(this, "Land for " + volumeText.getText() + " - " + folioText.getText() + " is registered. \n\nDo you want to remove land anyway?", "", JOptionPane.YES_NO_OPTION);
                if (res == 0) {
                    removeLand();
                } else {
                    setTextFieldsEmpty();
                }
            } else {
                removeLand();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RemoveLand.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RemoveLand.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void roodTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roodTextActionPerformed
        perchText.requestFocus();
    }//GEN-LAST:event_roodTextActionPerformed

    private void perchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perchTextActionPerformed
        northText.requestFocus();
    }//GEN-LAST:event_perchTextActionPerformed

    private void westTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westTextActionPerformed
        eastText.requestFocus();
    }//GEN-LAST:event_westTextActionPerformed

    private void northTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northTextActionPerformed
        westText.requestFocus();
    }//GEN-LAST:event_northTextActionPerformed

    private void landCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_landCodeTextActionPerformed
        folioText.requestFocus();
    }//GEN-LAST:event_landCodeTextActionPerformed

    private void landCodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_landCodeTextFocusGained
    }//GEN-LAST:event_landCodeTextFocusGained

    private void landCodeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_landCodeTextKeyPressed
    }//GEN-LAST:event_landCodeTextKeyPressed

    private void eastTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastTextActionPerformed
        southText.requestFocus();
    }//GEN-LAST:event_eastTextActionPerformed

    private void acreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acreTextActionPerformed
        roodText.requestFocus();
    }//GEN-LAST:event_acreTextActionPerformed

    private void southTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southTextActionPerformed
        volumeText.requestFocus();
    }//GEN-LAST:event_southTextActionPerformed

    private void southTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_southTextFocusGained
    }//GEN-LAST:event_southTextFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RemoveLand dialog = new RemoveLand(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acreLabel;
    private javax.swing.JTextField acreText;
    private javax.swing.JLabel boundaryLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel eastLabel;
    private javax.swing.JTextField eastText;
    private javax.swing.JLabel extentLabel;
    private javax.swing.JLabel folioLabel;
    private javax.swing.JTextField folioText;
    private javax.swing.JTextField landCodeText;
    private javax.swing.JLabel landLabel;
    private javax.swing.JPanel landPanel;
    private javax.swing.JLabel localAuthorityLabel;
    private javax.swing.JTextField localAuthorityText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel northLabel;
    private javax.swing.JTextField northText;
    private javax.swing.JLabel perchLabel;
    private javax.swing.JTextField perchText;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel roodLabel;
    private javax.swing.JTextField roodText;
    private javax.swing.JLabel southLabel;
    private javax.swing.JTextField southText;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JTextField villageText;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JLabel volumeLabel1;
    private javax.swing.JTextField volumeText;
    private javax.swing.JLabel westLabel;
    private javax.swing.JTextField westText;
    // End of variables declaration//GEN-END:variables

    private void removeLand() {
        try {
            LandController.removeLand(landCodeText.getText());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(RemoveLand.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(RemoveLand.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTextFieldsEmpty() {
        volumeText.setText("");
        folioText.setText("");
        nameText.setText("");
        landCodeText.setText("");
        localAuthorityText.setText("");
        villageText.setText("");
        acreText.setText("");
        roodText.setText("");
        perchText.setText("");
        northText.setText("");
        southText.setText("");
        westText.setText("");
        eastText.setText("");
        volumeText.requestFocus();
    }
}
