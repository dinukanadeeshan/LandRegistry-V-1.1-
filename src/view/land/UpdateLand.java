/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.land;

import controller.LandController;
import controller.VillageController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import model.Village;
import others.Validation;
import view.village.AddVillage;

/**
 *
 * @author Nadeeshan
 */
public class UpdateLand extends javax.swing.JDialog {

    private JDialog dialog;

    /**
     * Creates new form UpdateLand
     */
    public UpdateLand(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocation(406, 90);
        initLandCodeComboBox();
        initVillageComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        newLandPanel = new javax.swing.JPanel();
        landCodeLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        addVillageButton = new javax.swing.JButton();
        villageLabel = new javax.swing.JLabel();
        villageComboBox = new javax.swing.JComboBox();
        extentLabel = new javax.swing.JLabel();
        perchLabel = new javax.swing.JLabel();
        roodLabel = new javax.swing.JLabel();
        acreLabel = new javax.swing.JLabel();
        acreText = new javax.swing.JTextField();
        roodText = new javax.swing.JTextField();
        perchText = new javax.swing.JTextField();
        boundaryLabel = new javax.swing.JLabel();
        northLabel = new javax.swing.JLabel();
        northText = new javax.swing.JTextField();
        westText = new javax.swing.JTextField();
        westLabel = new javax.swing.JLabel();
        eastLabel = new javax.swing.JLabel();
        eastText = new javax.swing.JTextField();
        southText = new javax.swing.JTextField();
        southLabel = new javax.swing.JLabel();
        lotNoLabel = new javax.swing.JLabel();
        lotNoText = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        volumeLabel = new javax.swing.JLabel();
        volumeText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        folioText = new javax.swing.JTextField();
        landCodeComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Update Land");

        landCodeLabel.setText("Land Code");

        nameLabel.setText("Name");

        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });
        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });

        addVillageButton.setText("Add Village");
        addVillageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVillageButtonActionPerformed(evt);
            }
        });

        villageLabel.setText("Village");

        villageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        villageComboBox.setSelectedItem(null);
        villageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villageComboBoxActionPerformed(evt);
            }
        });

        extentLabel.setText("Extent");

        perchLabel.setText("Perch");

        roodLabel.setText("Rood");

        acreLabel.setText("Acre");

        acreText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        acreText.setText("0");
        acreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acreTextActionPerformed(evt);
            }
        });
        acreText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                acreTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                acreTextFocusLost(evt);
            }
        });
        acreText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                acreTextKeyReleased(evt);
            }
        });

        roodText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        roodText.setText("0");
        roodText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roodTextActionPerformed(evt);
            }
        });
        roodText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                roodTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                roodTextFocusLost(evt);
            }
        });
        roodText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roodTextKeyReleased(evt);
            }
        });

        perchText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        perchText.setText("0");
        perchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perchTextActionPerformed(evt);
            }
        });
        perchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                perchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                perchTextFocusLost(evt);
            }
        });
        perchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                perchTextKeyReleased(evt);
            }
        });

        boundaryLabel.setText("Boundary :");

        northLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        northLabel.setText("North ");

        northText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northTextActionPerformed(evt);
            }
        });
        northText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                northTextKeyReleased(evt);
            }
        });

        westText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westTextActionPerformed(evt);
            }
        });
        westText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                westTextKeyReleased(evt);
            }
        });

        westLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        westLabel.setText("West");

        eastLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        eastLabel.setText("East");

        eastText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastTextActionPerformed(evt);
            }
        });
        eastText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eastTextKeyReleased(evt);
            }
        });

        southText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southTextActionPerformed(evt);
            }
        });
        southText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                southTextKeyReleased(evt);
            }
        });

        southLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        southLabel.setText("South");

        lotNoLabel.setText("Lot No");

        lotNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotNoTextActionPerformed(evt);
            }
        });
        lotNoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lotNoTextKeyReleased(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        volumeLabel.setText("Volume");

        volumeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTextActionPerformed(evt);
            }
        });
        volumeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                volumeTextKeyReleased(evt);
            }
        });

        jLabel1.setText("Folio");

        folioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioTextActionPerformed(evt);
            }
        });
        folioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                folioTextKeyReleased(evt);
            }
        });

        landCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                landCodeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newLandPanelLayout = new javax.swing.GroupLayout(newLandPanel);
        newLandPanel.setLayout(newLandPanelLayout);
        newLandPanelLayout.setHorizontalGroup(
            newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newLandPanelLayout.createSequentialGroup()
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newLandPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newLandPanelLayout.createSequentialGroup()
                                .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(villageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(addVillageButton))
                            .addGroup(newLandPanelLayout.createSequentialGroup()
                                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(boundaryLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(extentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newLandPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(roodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(westText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eastText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(southText, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(newLandPanelLayout.createSequentialGroup()
                                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newLandPanelLayout.createSequentialGroup()
                                        .addComponent(lotNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lotNoText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newLandPanelLayout.createSequentialGroup()
                                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(newLandPanelLayout.createSequentialGroup()
                        .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newLandPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newLandPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(landCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(landCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        newLandPanelLayout.setVerticalGroup(
            newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newLandPanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(landCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(landCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(villageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addVillageButton)
                    .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boundaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(westText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eastText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(southText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newLandPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lotNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lotNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newLandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(newLandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(newLandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
    }//GEN-LAST:event_nameTextActionPerformed

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
        String text = nameText.getText();
        try {
            if (!Validation.validateName(text)) {
                nameText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_nameTextKeyReleased

    private void addVillageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVillageButtonActionPerformed

        new AddVillage(this, true).show();

    }//GEN-LAST:event_addVillageButtonActionPerformed

    private void villageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villageComboBoxActionPerformed
        //        try {
        //            LocalAuthority localAuthority = LocalAuthorityController.getLocalAuthority(villageComboBox.getSelectedItem().toString().split(" - ")[0]);
        //            localAuthorityComboBox.setSelectedItem(localAuthority);
        //        } catch (SQLException ex) {
        //            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
        //        } catch (ClassNotFoundException ex) {
        //            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
        //        }
    }//GEN-LAST:event_villageComboBoxActionPerformed

    private void acreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acreTextActionPerformed
        roodText.requestFocus();
    }//GEN-LAST:event_acreTextActionPerformed

    private void acreTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acreTextFocusGained
        acreText.setText("");
    }//GEN-LAST:event_acreTextFocusGained

    private void acreTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acreTextFocusLost
        if (acreText.getText().equals("")) {
            acreText.setText("0");
        }
    }//GEN-LAST:event_acreTextFocusLost

    private void acreTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_acreTextKeyReleased
        String text = acreText.getText();
        try {
            if (!Validation.validateInt(text)) {
                acreText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_acreTextKeyReleased

    private void roodTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roodTextActionPerformed
        perchText.requestFocus();
    }//GEN-LAST:event_roodTextActionPerformed

    private void roodTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roodTextFocusGained
        roodText.setText("");
    }//GEN-LAST:event_roodTextFocusGained

    private void roodTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roodTextFocusLost
        if (roodText.getText().equals("")) {
            roodText.setText("0");
        }
    }//GEN-LAST:event_roodTextFocusLost

    private void roodTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roodTextKeyReleased
        String text = roodText.getText();
        try {
            if (!Validation.validateInt(text)) {
                roodText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
        System.out.println(villageComboBox.getSelectedItem());
    }//GEN-LAST:event_roodTextKeyReleased

    private void perchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perchTextActionPerformed
        northText.requestFocus();
    }//GEN-LAST:event_perchTextActionPerformed

    private void perchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_perchTextFocusGained
        perchText.setText("");
    }//GEN-LAST:event_perchTextFocusGained

    private void perchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_perchTextFocusLost
        if (perchText.getText().equals("")) {
            perchText.setText("0");
        }
    }//GEN-LAST:event_perchTextFocusLost

    private void perchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_perchTextKeyReleased
        String text = perchText.getText();
        try {
            if (!Validation.validateInt(text)) {
                perchText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_perchTextKeyReleased

    private void northTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northTextActionPerformed
        westText.requestFocus();
    }//GEN-LAST:event_northTextActionPerformed

    private void northTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_northTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_northTextKeyReleased

    private void westTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westTextActionPerformed
        eastText.requestFocus();
    }//GEN-LAST:event_westTextActionPerformed

    private void westTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_westTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_westTextKeyReleased

    private void eastTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastTextActionPerformed
        southText.requestFocus();
    }//GEN-LAST:event_eastTextActionPerformed

    private void eastTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eastTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_eastTextKeyReleased

    private void southTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southTextActionPerformed
        volumeText.requestFocus();
    }//GEN-LAST:event_southTextActionPerformed

    private void southTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_southTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_southTextKeyReleased

    private void lotNoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotNoTextActionPerformed
        updateButton.doClick();
    }//GEN-LAST:event_lotNoTextActionPerformed

    private void lotNoTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lotNoTextKeyReleased
    }//GEN-LAST:event_lotNoTextKeyReleased

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
//        String extentId = null;
//        try {
//            extentId = IdGen.getNextId("Extent", "ExtId", "Ex");
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//        double perch = Double.parseDouble(perchText.getText());
//        double acre = Double.parseDouble(acreText.getText());
//        double rood = Double.parseDouble(roodText.getText());
//
//        Extent extent = new Extent(extentId, perch, acre, rood);
//
//        String boundaryId = null;
//        try {
//            boundaryId = IdGen.getNextId("Boundry", "boundryId", "B");
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        String north = northText.getText();
//        String west = westText.getText();
//        String east = eastText.getText();
//        String south = southText.getText();
//
//        Boundary boundary = new Boundary(boundaryId, north, west, east, south);
//
//        Village village = new Village(villageComboBox.getSelectedItem().toString().split(" - ")[0], , villageComboBox.getSelectedItem().toString().split(" - ")[1]);
//        String villageCode = village.getVillageCode();
//        String landCode = landCodeText.getText();
//        String name = nameText.getText();
//        String lotNo = lotNoText.getText();
//        String volume = volumeText.getText();
//        int folio = Integer.parseInt(folioText.getText());
//
//        Land land = new Land(villageCode, landCode, name, lotNo, volume, folio);
//        Plan plan = new Plan();
//        try {
//            if(LandController.addLand(land, village, extent, boundary, plan) >0){
//                JOptionPane.showMessageDialog(this, "Saved Successfully");
//                setTextFieldsEmpty();
//            }
//
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        try {
//            landCodeText.setText(IdGen.getNextId("Land", "landCode", "L"));
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(AddLand.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//        if(dialog != null){
//            dialog.setVolumeAndFolio(volume, (""+folio));
//            this.dispose();
//        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void volumeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTextActionPerformed
        folioText.requestFocus();
    }//GEN-LAST:event_volumeTextActionPerformed

    private void volumeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_volumeTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_volumeTextKeyReleased

    private void folioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioTextActionPerformed
        lotNoText.requestFocus();
    }//GEN-LAST:event_folioTextActionPerformed

    private void folioTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyReleased
        String text = folioText.getText();
        try {
            if (!Validation.validateInt(text)) {
                folioText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_folioTextKeyReleased

    private void landCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_landCodeComboBoxActionPerformed
//        try {
//            Land land = LandController.getLand(landCodeComboBox.getSelectedItem().toString());
//            nameText.setText(land.getName());
//            
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_landCodeComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateLand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                UpdateLand dialog = new UpdateLand(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acreLabel;
    private javax.swing.JTextField acreText;
    private javax.swing.JButton addVillageButton;
    private javax.swing.JLabel boundaryLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel eastLabel;
    private javax.swing.JTextField eastText;
    private javax.swing.JLabel extentLabel;
    private javax.swing.JTextField folioText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox landCodeComboBox;
    private javax.swing.JLabel landCodeLabel;
    private javax.swing.JLabel lotNoLabel;
    private javax.swing.JTextField lotNoText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JPanel newLandPanel;
    private javax.swing.JLabel northLabel;
    private javax.swing.JTextField northText;
    private javax.swing.JLabel perchLabel;
    private javax.swing.JTextField perchText;
    private javax.swing.JLabel roodLabel;
    private javax.swing.JTextField roodText;
    private javax.swing.JLabel southLabel;
    private javax.swing.JTextField southText;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JComboBox villageComboBox;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JTextField volumeText;
    private javax.swing.JLabel westLabel;
    private javax.swing.JTextField westText;
    // End of variables declaration//GEN-END:variables

    private void setSaveButtonEnable() {
    }

    private void setTextFieldsEmpty() {
    }

    public void initLandCodeComboBox() {
        landCodeComboBox.removeAllItems();
        try {
            ArrayList<String> landCodeList = LandController.getLandCodeList();
            for (int i = 0; i < landCodeList.size(); i++) {
                String landCode = landCodeList.get(i);
                landCodeComboBox.addItem(landCode);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void initVillageComboBox() {
        villageComboBox.removeAllItems();
        try {
            ArrayList<Village> villages = VillageController.getVillages();
            for (int i = 0; i < villages.size(); i++) {
                Village village = villages.get(i);
                villageComboBox.addItem(village);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UpdateLand.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
