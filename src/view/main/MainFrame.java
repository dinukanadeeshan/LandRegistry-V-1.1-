/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.main;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.DateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import model.User;
import others.BackupClass;
import view.daybook.NewDayBookEntry;
import view.daybook.ReturningDeed;
import view.daybook.ViewDailyDayBookRecord;
import view.deed.ViewDeedsToReturn;
import view.deed.ViewUnregisteredDeeds;
import view.land.Extract;
import view.land.RemoveLand;
import view.land.UpdateLand;
import view.localAuthority.ViewLocalAuthority;
import view.natureOfDeed.AddNature;
import view.natureOfDeed.DeleteNature;
import view.natureOfDeed.UpdateNature;
import view.natureOfDeed.ViewNature;
import view.notry.AddNotry;
import view.notry.RemoveNotry;
import view.notry.UpdateNotry;
import view.notry.ViewNotry;
import view.office.AddOffice;
import view.office.ViewOffice;
import view.registration.NewRegistration;
import view.registration.ViewDailyRegistration;
import view.startup.Login;
import view.user.AddUser;
import view.user.ChangePassword;
import view.user.DeleteUser;
import view.village.ViewVillage;

/**
 *
 * @author Dinuka
 */
public class MainFrame extends javax.swing.JFrame {

    private User user;
    private Timer timer;
    private DateFormat timeFormat;

    /**
     * Creates new form MainFrame
     */
    public MainFrame(User user) {
        try {

            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            // UIManager.setLookAndFeel(new AluminiumLookAndFeel());

        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AddNotry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.user = user;
        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/view/images/flag-lk.png"));
        setIconImage(image);

        setSize(Toolkit.getDefaultToolkit().getScreenSize());
        initComponents();
        if (user.getPrivilage() != 0) {
            registrationButton.setVisible(false);
            returnDeedButton.setVisible(false);
            folioCopyButton.setVisible(false);
            registrationMenuItem.setEnabled(false);
//            undoRegistrationMenuItem.setEnabled(false);
            extractMenuItem.setEnabled(false);
            newUserMenuItem.setEnabled(false);
            removeUserMenuItem.setEnabled(false);
            restoreBackupMenuItem.setEnabled(false);
            landMenu.setEnabled(false);

            this.repaint();
        }

        timeFormat = DateFormat.getTimeInstance(DateFormat.MEDIUM);
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();


                clockLabel.setText(timeFormat.format(date));
            }
        });
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        dayBookEntryButton = new javax.swing.JButton();
        registrationButton = new javax.swing.JButton();
        folioCopyButton = new javax.swing.JButton();
        returnDeedButton = new javax.swing.JButton();
        dailyDayBookRecButton = new javax.swing.JButton();
        deedsToReturnButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backGroundLabel = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        clockLabel = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JMenuBar();
        masterFileMenu = new javax.swing.JMenu();
        landMenu = new javax.swing.JMenu();
        updateLandMenuItem = new javax.swing.JMenuItem();
        removeLandMenuItem = new javax.swing.JMenuItem();
        notryMenu = new javax.swing.JMenu();
        addNotryMenuItem = new javax.swing.JMenuItem();
        updateNotryMenuItem = new javax.swing.JMenuItem();
        removeNotryMenuItem = new javax.swing.JMenuItem();
        notryMenuItem = new javax.swing.JMenuItem();
        villageMenu = new javax.swing.JMenu();
        viewVillageMenuItem = new javax.swing.JMenuItem();
        localAuthorityMenu = new javax.swing.JMenu();
        updateLAuthorityMenuItem = new javax.swing.JMenuItem();
        officeMenu = new javax.swing.JMenu();
        addOfficeMenuItem = new javax.swing.JMenuItem();
        removeMenuItem = new javax.swing.JMenuItem();
        natureOfDeedMenu = new javax.swing.JMenu();
        addNatureMenuItem = new javax.swing.JMenuItem();
        updateNatureMenuItem = new javax.swing.JMenuItem();
        removeNatureMenuItem = new javax.swing.JMenuItem();
        natureOfDeedMenuItem = new javax.swing.JMenuItem();
        exitSeparator = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        unRegisteredDeedsMenuItem = new javax.swing.JMenuItem();
        deedsToReturnMenuItem = new javax.swing.JMenuItem();
        registrationInfoMenuItem = new javax.swing.JMenuItem();
        dailyDayBookRecordMenuItem = new javax.swing.JMenuItem();
        registrationMenu = new javax.swing.JMenu();
        registrationMenuItem = new javax.swing.JMenuItem();
        extractMenuItem = new javax.swing.JMenuItem();
        entryMenu = new javax.swing.JMenu();
        dayBookEntryMenuItem = new javax.swing.JMenuItem();
        returnigDeedMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        userMenu = new javax.swing.JMenu();
        newUserMenuItem = new javax.swing.JMenuItem();
        removeUserMenuItem = new javax.swing.JMenuItem();
        changePasswordMenuItem = new javax.swing.JMenuItem();
        backupMenu = new javax.swing.JMenu();
        createBackupMenuItem = new javax.swing.JMenuItem();
        restoreBackupMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Land Registry System - Kotapola");
        setBackground(new java.awt.Color(255, 255, 204));
        setForeground(new java.awt.Color(255, 255, 204));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        dayBookEntryButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        dayBookEntryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/toggle_log.png"))); // NOI18N
        dayBookEntryButton.setText("Day Book Entry");
        dayBookEntryButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dayBookEntryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayBookEntryButtonActionPerformed(evt);
            }
        });

        registrationButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        registrationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/BioCocoa.app.png"))); // NOI18N
        registrationButton.setText("Registration");
        registrationButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        registrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationButtonActionPerformed(evt);
            }
        });

        folioCopyButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        folioCopyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/documentation.png"))); // NOI18N
        folioCopyButton.setText("  Extract");
        folioCopyButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        folioCopyButton.setIconTextGap(6);
        folioCopyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioCopyButtonActionPerformed(evt);
            }
        });

        returnDeedButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        returnDeedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/view-refresh-8.png"))); // NOI18N
        returnDeedButton.setText("Returning Deed");
        returnDeedButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        returnDeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnDeedButtonActionPerformed(evt);
            }
        });

        dailyDayBookRecButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        dailyDayBookRecButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/view-calendar-day-2.png"))); // NOI18N
        dailyDayBookRecButton.setText("<html> &nbsp;&nbsp;Daily Day Book <br> &nbsp;&nbsp;&nbsp;&nbsp;Records </html>");
        dailyDayBookRecButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dailyDayBookRecButton.setIconTextGap(6);
        dailyDayBookRecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyDayBookRecButtonActionPerformed(evt);
            }
        });

        deedsToReturnButton.setFont(new java.awt.Font("Lucida Bright", 0, 21)); // NOI18N
        deedsToReturnButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/dialog-clean.png"))); // NOI18N
        deedsToReturnButton.setText("Deeds to Return");
        deedsToReturnButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deedsToReturnButton.setIconTextGap(6);
        deedsToReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deedsToReturnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dayBookEntryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(registrationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(folioCopyButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(returnDeedButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dailyDayBookRecButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deedsToReturnButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(dayBookEntryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(returnDeedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(folioCopyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dailyDayBookRecButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deedsToReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        backGroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/Sri Lanka logo copy.jpg"))); // NOI18N

        logOutButton.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/application-exit-2.png"))); // NOI18N
        logOutButton.setText("Log Out");
        logOutButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        clockLabel.setFont(new java.awt.Font("Baskerville Old Face", 2, 36)); // NOI18N
        clockLabel.setForeground(new java.awt.Color(0, 51, 153));

        mainMenuBar.setForeground(new java.awt.Color(204, 204, 204));
        mainMenuBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        mainMenuBar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        mainMenuBar.setMargin(new java.awt.Insets(0, 4, 0, 0));

        masterFileMenu.setText("File   ");
        masterFileMenu.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N

        landMenu.setText("Land");
        landMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        updateLandMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        updateLandMenuItem.setText("Update Land");
        updateLandMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLandMenuItemActionPerformed(evt);
            }
        });
        landMenu.add(updateLandMenuItem);

        removeLandMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        removeLandMenuItem.setText("Remove Land");
        removeLandMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeLandMenuItemActionPerformed(evt);
            }
        });
        landMenu.add(removeLandMenuItem);

        masterFileMenu.add(landMenu);

        notryMenu.setText("Notry");
        notryMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        addNotryMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        addNotryMenuItem.setText("Add Notry");
        addNotryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNotryMenuItemActionPerformed(evt);
            }
        });
        notryMenu.add(addNotryMenuItem);

        updateNotryMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        updateNotryMenuItem.setText("Update Notry");
        updateNotryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNotryMenuItemActionPerformed(evt);
            }
        });
        notryMenu.add(updateNotryMenuItem);

        removeNotryMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        removeNotryMenuItem.setText("Remove Notry");
        removeNotryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNotryMenuItemActionPerformed(evt);
            }
        });
        notryMenu.add(removeNotryMenuItem);

        notryMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        notryMenuItem.setText("View Notry Info");
        notryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notryMenuItemActionPerformed(evt);
            }
        });
        notryMenu.add(notryMenuItem);

        masterFileMenu.add(notryMenu);

        villageMenu.setText("Village");
        villageMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        viewVillageMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        viewVillageMenuItem.setText("Add/Update/Remove/View Village");
        viewVillageMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVillageMenuItemActionPerformed(evt);
            }
        });
        villageMenu.add(viewVillageMenuItem);

        masterFileMenu.add(villageMenu);

        localAuthorityMenu.setText("L. Authority");
        localAuthorityMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        updateLAuthorityMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        updateLAuthorityMenuItem.setText("Add/View/Update/Delete L. Authority");
        updateLAuthorityMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateLAuthorityMenuItemActionPerformed(evt);
            }
        });
        localAuthorityMenu.add(updateLAuthorityMenuItem);

        masterFileMenu.add(localAuthorityMenu);

        officeMenu.setText("Office");
        officeMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        addOfficeMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        addOfficeMenuItem.setText("Add Office");
        addOfficeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOfficeMenuItemActionPerformed(evt);
            }
        });
        officeMenu.add(addOfficeMenuItem);

        removeMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        removeMenuItem.setText("View/ Remove/ Update Office");
        removeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMenuItemActionPerformed(evt);
            }
        });
        officeMenu.add(removeMenuItem);

        masterFileMenu.add(officeMenu);

        natureOfDeedMenu.setText("Nature of Deed");
        natureOfDeedMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        addNatureMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        addNatureMenuItem.setText("Add Nature");
        addNatureMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNatureMenuItemActionPerformed(evt);
            }
        });
        natureOfDeedMenu.add(addNatureMenuItem);

        updateNatureMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        updateNatureMenuItem.setText("Update Nature");
        updateNatureMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNatureMenuItemActionPerformed(evt);
            }
        });
        natureOfDeedMenu.add(updateNatureMenuItem);

        removeNatureMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        removeNatureMenuItem.setText("Remove Nature");
        removeNatureMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNatureMenuItemActionPerformed(evt);
            }
        });
        natureOfDeedMenu.add(removeNatureMenuItem);

        natureOfDeedMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        natureOfDeedMenuItem.setText("View Nature Of Deed");
        natureOfDeedMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureOfDeedMenuItemActionPerformed(evt);
            }
        });
        natureOfDeedMenu.add(natureOfDeedMenuItem);

        masterFileMenu.add(natureOfDeedMenu);
        masterFileMenu.add(exitSeparator);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        masterFileMenu.add(exitMenuItem);

        mainMenuBar.add(masterFileMenu);

        viewMenu.setText("Check    ");
        viewMenu.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N
        viewMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        unRegisteredDeedsMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        unRegisteredDeedsMenuItem.setText("UnRegistered Deeds");
        unRegisteredDeedsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unRegisteredDeedsMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(unRegisteredDeedsMenuItem);

        deedsToReturnMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        deedsToReturnMenuItem.setText("Deeds To Return");
        deedsToReturnMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deedsToReturnMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(deedsToReturnMenuItem);

        registrationInfoMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        registrationInfoMenuItem.setText("Daily Registration Info");
        registrationInfoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationInfoMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(registrationInfoMenuItem);

        dailyDayBookRecordMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        dailyDayBookRecordMenuItem.setText("Daily Day Book Record");
        dailyDayBookRecordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dailyDayBookRecordMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(dailyDayBookRecordMenuItem);

        mainMenuBar.add(viewMenu);

        registrationMenu.setText("Registration   ");
        registrationMenu.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N

        registrationMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        registrationMenuItem.setText("Registration Entry");
        registrationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationMenuItemActionPerformed(evt);
            }
        });
        registrationMenu.add(registrationMenuItem);

        extractMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        extractMenuItem.setText("Extract");
        extractMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extractMenuItemActionPerformed(evt);
            }
        });
        registrationMenu.add(extractMenuItem);

        mainMenuBar.add(registrationMenu);

        entryMenu.setText("Day Book   ");
        entryMenu.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N

        dayBookEntryMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        dayBookEntryMenuItem.setText("Day Book Entry");
        dayBookEntryMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayBookEntryMenuItemActionPerformed(evt);
            }
        });
        entryMenu.add(dayBookEntryMenuItem);

        returnigDeedMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        returnigDeedMenuItem.setText("Returning Deed");
        returnigDeedMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnigDeedMenuItemActionPerformed(evt);
            }
        });
        entryMenu.add(returnigDeedMenuItem);

        mainMenuBar.add(entryMenu);

        settingsMenu.setText("Settings");
        settingsMenu.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 18)); // NOI18N

        userMenu.setText("User");
        userMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        newUserMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        newUserMenuItem.setText("New User");
        newUserMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(newUserMenuItem);

        removeUserMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        removeUserMenuItem.setText("Remove User");
        removeUserMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(removeUserMenuItem);

        changePasswordMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        changePasswordMenuItem.setText("Change Password");
        changePasswordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordMenuItemActionPerformed(evt);
            }
        });
        userMenu.add(changePasswordMenuItem);

        settingsMenu.add(userMenu);

        backupMenu.setText("Backup");
        backupMenu.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N

        createBackupMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        createBackupMenuItem.setText("Create BackUp");
        createBackupMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBackupMenuItemActionPerformed(evt);
            }
        });
        backupMenu.add(createBackupMenuItem);

        restoreBackupMenuItem.setFont(new java.awt.Font("Lucida Sans Unicode", 3, 14)); // NOI18N
        restoreBackupMenuItem.setText("Restore BackUp");
        restoreBackupMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreBackupMenuItemActionPerformed(evt);
            }
        });
        backupMenu.add(restoreBackupMenuItem);

        settingsMenu.add(backupMenu);

        mainMenuBar.add(settingsMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298)
                .addComponent(backGroundLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logOutButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clockLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backGroundLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logOutButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dayBookEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayBookEntryButtonActionPerformed
        new NewDayBookEntry(this, true, user).show();
    }//GEN-LAST:event_dayBookEntryButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
//        System.out.println(evt.getX() + "    " + evt.getY());
    }//GEN-LAST:event_formMouseClicked

    private void registrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationButtonActionPerformed
        new NewRegistration(this, true, user).show();
    }//GEN-LAST:event_registrationButtonActionPerformed

    private void dayBookEntryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayBookEntryMenuItemActionPerformed
        new NewDayBookEntry(this, true, user).show();
    }//GEN-LAST:event_dayBookEntryMenuItemActionPerformed

    private void extractMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extractMenuItemActionPerformed
        new Extract(this, true).show();
    }//GEN-LAST:event_extractMenuItemActionPerformed

    private void natureOfDeedMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natureOfDeedMenuItemActionPerformed
        new ViewNature(this, true).show();
    }//GEN-LAST:event_natureOfDeedMenuItemActionPerformed

    private void registrationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationMenuItemActionPerformed
        new NewRegistration(this, true, user).show();
    }//GEN-LAST:event_registrationMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void notryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notryMenuItemActionPerformed
        new ViewNotry(this, true).show();
    }//GEN-LAST:event_notryMenuItemActionPerformed

    private void registrationInfoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationInfoMenuItemActionPerformed
        new ViewDailyRegistration(this, false).show();
    }//GEN-LAST:event_registrationInfoMenuItemActionPerformed

    private void folioCopyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioCopyButtonActionPerformed
        new Extract(this, true).show();
    }//GEN-LAST:event_folioCopyButtonActionPerformed

    private void returnDeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnDeedButtonActionPerformed
        new ReturningDeed(this, true).show();
    }//GEN-LAST:event_returnDeedButtonActionPerformed

    private void addNotryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNotryMenuItemActionPerformed
        new AddNotry(this, true).show();
    }//GEN-LAST:event_addNotryMenuItemActionPerformed

    private void returnigDeedMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnigDeedMenuItemActionPerformed
        new ReturningDeed(this, true).show();
    }//GEN-LAST:event_returnigDeedMenuItemActionPerformed

    private void unRegisteredDeedsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unRegisteredDeedsMenuItemActionPerformed
        new ViewUnregisteredDeeds(this, true, user).show();
    }//GEN-LAST:event_unRegisteredDeedsMenuItemActionPerformed

    private void deedsToReturnMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deedsToReturnMenuItemActionPerformed
        new ViewDeedsToReturn(this, true).show();
    }//GEN-LAST:event_deedsToReturnMenuItemActionPerformed

    private void removeNotryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNotryMenuItemActionPerformed
        new RemoveNotry(this, true).show();
    }//GEN-LAST:event_removeNotryMenuItemActionPerformed

    private void updateNotryMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNotryMenuItemActionPerformed
        new UpdateNotry(this, true).show();
    }//GEN-LAST:event_updateNotryMenuItemActionPerformed

    private void addNatureMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNatureMenuItemActionPerformed
        new AddNature(this, true).show();
    }//GEN-LAST:event_addNatureMenuItemActionPerformed

    private void updateNatureMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNatureMenuItemActionPerformed
        new UpdateNature(this, true).show();
    }//GEN-LAST:event_updateNatureMenuItemActionPerformed

    private void removeNatureMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNatureMenuItemActionPerformed
        new DeleteNature(this, true).show();
    }//GEN-LAST:event_removeNatureMenuItemActionPerformed

    private void dailyDayBookRecordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyDayBookRecordMenuItemActionPerformed
        new ViewDailyDayBookRecord(this, true).show();
    }//GEN-LAST:event_dailyDayBookRecordMenuItemActionPerformed

    private void dailyDayBookRecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dailyDayBookRecButtonActionPerformed
        new ViewDailyDayBookRecord(this, true).show();
    }//GEN-LAST:event_dailyDayBookRecButtonActionPerformed

    private void deedsToReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deedsToReturnButtonActionPerformed
        new ViewDeedsToReturn(this, true).show();
    }//GEN-LAST:event_deedsToReturnButtonActionPerformed

    private void viewVillageMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVillageMenuItemActionPerformed
        new ViewVillage(this, true).show();
    }//GEN-LAST:event_viewVillageMenuItemActionPerformed

    private void createBackupMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBackupMenuItemActionPerformed
        
        JFileChooser fileChooser = new JFileChooser("./");
        int res = fileChooser.showSaveDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().toString();
            System.out.println(path);
            try {
                BackupClass.backupDB("LandRegistry", "root", "123", path);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_createBackupMenuItemActionPerformed

    private void restoreBackupMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBackupMenuItemActionPerformed
       
        JFileChooser fileChooser = new JFileChooser("./");
        int res = fileChooser.showOpenDialog(this);
        if (res == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().toString();
            System.out.println(path);
            try {
                BackupClass.restoreDB("root", "123", path);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_restoreBackupMenuItemActionPerformed

    private void newUserMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserMenuItemActionPerformed
        new AddUser(this, true).show();
    }//GEN-LAST:event_newUserMenuItemActionPerformed

    private void removeUserMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserMenuItemActionPerformed
        new DeleteUser(this, false).show();
    }//GEN-LAST:event_removeUserMenuItemActionPerformed

    private void addOfficeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOfficeMenuItemActionPerformed
        new AddOffice(this, true).show();
    }//GEN-LAST:event_addOfficeMenuItemActionPerformed

    private void removeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMenuItemActionPerformed
        new ViewOffice(this, true).show();
    }//GEN-LAST:event_removeMenuItemActionPerformed

    private void updateLAuthorityMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLAuthorityMenuItemActionPerformed
        new ViewLocalAuthority(this, true).show();
    }//GEN-LAST:event_updateLAuthorityMenuItemActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed

        this.dispose();
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        new Login(null, true).show();

    }//GEN-LAST:event_logOutButtonActionPerformed

    private void changePasswordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordMenuItemActionPerformed
        new ChangePassword(this, true, user).setVisible(true);
    }//GEN-LAST:event_changePasswordMenuItemActionPerformed

    private void updateLandMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateLandMenuItemActionPerformed
        new UpdateLand(this, true).show();
    }//GEN-LAST:event_updateLandMenuItemActionPerformed

    private void removeLandMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeLandMenuItemActionPerformed
        new RemoveLand(this, true).show();
    }//GEN-LAST:event_removeLandMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame(new User(null, null, 0)).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addNatureMenuItem;
    private javax.swing.JMenuItem addNotryMenuItem;
    private javax.swing.JMenuItem addOfficeMenuItem;
    private javax.swing.JLabel backGroundLabel;
    private javax.swing.JMenu backupMenu;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JMenuItem changePasswordMenuItem;
    private javax.swing.JLabel clockLabel;
    private javax.swing.JMenuItem createBackupMenuItem;
    private javax.swing.JButton dailyDayBookRecButton;
    private javax.swing.JMenuItem dailyDayBookRecordMenuItem;
    private javax.swing.JButton dayBookEntryButton;
    private javax.swing.JMenuItem dayBookEntryMenuItem;
    private javax.swing.JButton deedsToReturnButton;
    private javax.swing.JMenuItem deedsToReturnMenuItem;
    private javax.swing.JMenu entryMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPopupMenu.Separator exitSeparator;
    private javax.swing.JMenuItem extractMenuItem;
    private javax.swing.JButton folioCopyButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu landMenu;
    private javax.swing.JMenu localAuthorityMenu;
    private javax.swing.JButton logOutButton;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenu masterFileMenu;
    private javax.swing.JMenu natureOfDeedMenu;
    private javax.swing.JMenuItem natureOfDeedMenuItem;
    private javax.swing.JMenuItem newUserMenuItem;
    private javax.swing.JMenu notryMenu;
    private javax.swing.JMenuItem notryMenuItem;
    private javax.swing.JMenu officeMenu;
    private javax.swing.JButton registrationButton;
    private javax.swing.JMenuItem registrationInfoMenuItem;
    private javax.swing.JMenu registrationMenu;
    private javax.swing.JMenuItem registrationMenuItem;
    private javax.swing.JMenuItem removeLandMenuItem;
    private javax.swing.JMenuItem removeMenuItem;
    private javax.swing.JMenuItem removeNatureMenuItem;
    private javax.swing.JMenuItem removeNotryMenuItem;
    private javax.swing.JMenuItem removeUserMenuItem;
    private javax.swing.JMenuItem restoreBackupMenuItem;
    private javax.swing.JButton returnDeedButton;
    private javax.swing.JMenuItem returnigDeedMenuItem;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JMenuItem unRegisteredDeedsMenuItem;
    private javax.swing.JMenuItem updateLAuthorityMenuItem;
    private javax.swing.JMenuItem updateLandMenuItem;
    private javax.swing.JMenuItem updateNatureMenuItem;
    private javax.swing.JMenuItem updateNotryMenuItem;
    private javax.swing.JMenu userMenu;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JMenuItem viewVillageMenuItem;
    private javax.swing.JMenu villageMenu;
    // End of variables declaration//GEN-END:variables

    public void setUser(User user) {
        this.user = user;
    }
}
