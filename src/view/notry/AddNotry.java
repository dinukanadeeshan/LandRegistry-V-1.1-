/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.notry;

import controller.NotryController;
import controller.OfficeController;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.Notry;
import others.Validation;
import view.daybook.NewDayBookEntry;
import view.office.AddOffice;

/**
 *
 * @author Dinuka
 */
public class AddNotry extends javax.swing.JDialog {

    Frame parent;
    NewDayBookEntry dayBookEntry;

    /**
     * Creates new form AddNotry
     */
    public AddNotry(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initObject();

    }

    public AddNotry(Frame parent, boolean b, NewDayBookEntry dayBookEntry, String notryCode) {
        super(parent, b);
        this.parent = parent;
        this.dayBookEntry = dayBookEntry;

        initObject();
        notryCodeText.setText(notryCode);
    }

    private void initObject() {

        initComponents();
        setLocation(406, 90);
        initOfficeComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nortyOrJudgeuttonGroup = new javax.swing.ButtonGroup();
        genderButtonGroup = new javax.swing.ButtonGroup();
        notryCodeLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        notryCodeText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        dateOfApointmentLabel = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        notryOrJudgeLabel = new javax.swing.JLabel();
        notryRadio = new javax.swing.JRadioButton();
        judgeRadio = new javax.swing.JRadioButton();
        mediumLabel = new javax.swing.JLabel();
        sinhalaCheckBox = new javax.swing.JCheckBox();
        englishCheckBox = new javax.swing.JCheckBox();
        tamilCheckBox = new javax.swing.JCheckBox();
        dateOfAppointementCalenderCombo = new org.freixas.jcalendar.JCalendarCombo();
        genderLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        officeLabel = new javax.swing.JLabel();
        officeComboBox = new javax.swing.JComboBox();
        addOfficeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notry");

        notryCodeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryCodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryCodeLabel.setText("Notry Code");

        titleLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("New Notry");
        titleLabel.setFocusable(false);
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        nameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name");

        saveButton.setFont(new java.awt.Font("Verdana", 3, 16)); // NOI18N
        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Verdana", 3, 16)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        notryCodeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        notryCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notryCodeTextActionPerformed(evt);
            }
        });
        notryCodeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                notryCodeTextKeyReleased(evt);
            }
        });

        nameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });
        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });

        dateOfApointmentLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        dateOfApointmentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateOfApointmentLabel.setText("Date Of Appointment");

        addressText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        addressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTextActionPerformed(evt);
            }
        });
        addressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextKeyReleased(evt);
            }
        });

        addressLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        addressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressLabel.setText("Address");

        notryOrJudgeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryOrJudgeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryOrJudgeLabel.setText("Notry or Judge");

        nortyOrJudgeuttonGroup.add(notryRadio);
        notryRadio.setFont(new java.awt.Font("Plantagenet Cherokee", 2, 17)); // NOI18N
        notryRadio.setSelected(true);
        notryRadio.setText("Notry");
        notryRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notryRadioActionPerformed(evt);
            }
        });
        notryRadio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                notryRadioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                notryRadioKeyReleased(evt);
            }
        });

        nortyOrJudgeuttonGroup.add(judgeRadio);
        judgeRadio.setFont(new java.awt.Font("Plantagenet Cherokee", 2, 17)); // NOI18N
        judgeRadio.setText("Judge");
        judgeRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                judgeRadioActionPerformed(evt);
            }
        });
        judgeRadio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                judgeRadioKeyPressed(evt);
            }
        });

        mediumLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        mediumLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mediumLabel.setText("Medium");

        sinhalaCheckBox.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        sinhalaCheckBox.setSelected(true);
        sinhalaCheckBox.setText("Sinhala");
        sinhalaCheckBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sinhalaCheckBoxKeyPressed(evt);
            }
        });

        englishCheckBox.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        englishCheckBox.setText("English");
        englishCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                englishCheckBoxActionPerformed(evt);
            }
        });
        englishCheckBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                englishCheckBoxKeyPressed(evt);
            }
        });

        tamilCheckBox.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        tamilCheckBox.setText("Tamil");
        tamilCheckBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tamilCheckBoxKeyPressed(evt);
            }
        });

        dateOfAppointementCalenderCombo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        dateOfAppointementCalenderCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateOfAppointementCalenderComboActionPerformed(evt);
            }
        });
        dateOfAppointementCalenderCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateOfAppointementCalenderComboKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateOfAppointementCalenderComboKeyReleased(evt);
            }
        });

        genderLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        genderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        genderLabel.setText("Gender");

        genderButtonGroup.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Plantagenet Cherokee", 2, 17)); // NOI18N
        maleRadioButton.setSelected(true);
        maleRadioButton.setText("Male");
        maleRadioButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                maleRadioButtonKeyPressed(evt);
            }
        });

        genderButtonGroup.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Plantagenet Cherokee", 2, 17)); // NOI18N
        femaleRadioButton.setText("Female");
        femaleRadioButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                femaleRadioButtonKeyPressed(evt);
            }
        });

        officeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        officeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        officeLabel.setText("Office");

        officeComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        officeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        officeComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                officeComboBoxKeyPressed(evt);
            }
        });

        addOfficeButton.setFont(new java.awt.Font("Verdana", 3, 15)); // NOI18N
        addOfficeButton.setText("Add Office");
        addOfficeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOfficeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateOfApointmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(notryCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(officeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(notryOrJudgeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mediumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sinhalaCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(englishCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tamilCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(notryRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(maleRadioButton))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(femaleRadioButton)
                                    .addComponent(judgeRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(officeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(addOfficeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 19, Short.MAX_VALUE))
                            .addComponent(notryCodeText)
                            .addComponent(dateOfAppointementCalenderCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameText)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                            .addComponent(addressText))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(notryCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notryCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOfApointmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOfAppointementCalenderCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(officeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addOfficeButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notryRadio)
                            .addComponent(judgeRadio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maleRadioButton)
                            .addComponent(femaleRadioButton)
                            .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(notryOrJudgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sinhalaCheckBox)
                    .addComponent(mediumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(englishCheckBox)
                    .addComponent(tamilCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void notryCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notryCodeTextActionPerformed
        dateOfAppointementCalenderCombo.requestFocus();

    }//GEN-LAST:event_notryCodeTextActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        officeComboBox.requestFocus();
    }//GEN-LAST:event_nameTextActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String notryCode = notryCodeText.getText();
        String name = nameText.getText();
        String address = addressText.getText();
        boolean sinhalaMedium = sinhalaCheckBox.isSelected();
        boolean englishMedium = englishCheckBox.isSelected();
        boolean tamilMedium = tamilCheckBox.isSelected();
        String notryOrJudge = notryRadio.isSelected() ? "Notry" : "Judge";
        Date date = dateOfAppointementCalenderCombo.getDate();
        String dateOfAppointment = (date.getYear() + 1900) + "-" + date.getMonth() + "-" + date.getDate();
        String gender = maleRadioButton.isSelected() ? "Male" : "Female";

        try {
            String officeCode = OfficeController.getOfficeCode((String) officeComboBox.getSelectedItem());

            Notry notry = new Notry(notryCode, name, address, sinhalaMedium, englishMedium, tamilMedium, notryOrJudge, dateOfAppointment, gender, officeCode);
            int res = NotryController.addNotry(notry);
            if (res > 0) {
                JLabel messageLabel = new JLabel("Saved Succesfully....");
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLabel);
            }
        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(this, ex.getErrorCode() + " " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (dayBookEntry == null) {
            notryCodeText.setText("");
            nameText.setText("");
            addressText.setText("");
            sinhalaCheckBox.setSelected(true);
            englishCheckBox.setSelected(false);
            tamilCheckBox.setSelected(false);
            notryRadio.setSelected(true);
            maleRadioButton.setSelected(true);
            dateOfAppointementCalenderCombo.setDate(new Date());
            notryCodeText.requestFocus();
        } else {
            this.dispose();
            dayBookEntry.setClient();
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void addressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTextActionPerformed
        saveButton.doClick();

    }//GEN-LAST:event_addressTextActionPerformed

    private void judgeRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_judgeRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_judgeRadioActionPerformed

    private void englishCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_englishCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_englishCheckBoxActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void notryCodeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notryCodeTextKeyReleased
        try {
            String text = notryCodeText.getText();
            if (!Validation.validateNotryCode(text)) {
                int caretPosition = notryCodeText.getCaretPosition();
                notryCodeText.setText(text.substring(0, caretPosition - 1) + "" + text.substring(caretPosition));
                notryCodeText.setCaretPosition(caretPosition - 1);
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_notryCodeTextKeyReleased

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
        String text = nameText.getText();
        try {
            if (!Validation.validateName(text)) {
                int caretPosition = nameText.getCaretPosition();
                nameText.setText(text.substring(0, caretPosition - 1) + "" + text.substring(caretPosition));
                nameText.setCaretPosition(caretPosition - 1);
            }
        } catch (Exception e) {
        }
        setSaveButtonEnable();
    }//GEN-LAST:event_nameTextKeyReleased

    private void addressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextKeyReleased
        setSaveButtonEnable();
    }//GEN-LAST:event_addressTextKeyReleased

    private void notryRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notryRadioActionPerformed
        maleRadioButton.requestFocus();
    }//GEN-LAST:event_notryRadioActionPerformed

    private void dateOfAppointementCalenderComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOfAppointementCalenderComboActionPerformed
        nameText.requestFocus();
    }//GEN-LAST:event_dateOfAppointementCalenderComboActionPerformed

    private void dateOfAppointementCalenderComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateOfAppointementCalenderComboKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            dateOfAppointementCalenderCombo.showPopup();
        }

    }//GEN-LAST:event_dateOfAppointementCalenderComboKeyReleased

    private void dateOfAppointementCalenderComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateOfAppointementCalenderComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nameText.requestFocus();
        }
    }//GEN-LAST:event_dateOfAppointementCalenderComboKeyPressed

    private void officeComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_officeComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            notryRadio.requestFocus();
        }
    }//GEN-LAST:event_officeComboBoxKeyPressed

    private void notryRadioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notryRadioKeyReleased
    }//GEN-LAST:event_notryRadioKeyReleased

    private void notryRadioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notryRadioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            judgeRadio.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            notryRadio.setSelected(true);
            maleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            officeComboBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            femaleRadioButton.requestFocus();
        }
    }//GEN-LAST:event_notryRadioKeyPressed

    private void judgeRadioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_judgeRadioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            notryRadio.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            judgeRadio.setSelected(true);
            maleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            officeComboBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            maleRadioButton.requestFocus();
        }
    }//GEN-LAST:event_judgeRadioKeyPressed

    private void maleRadioButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_maleRadioButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            femaleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            maleRadioButton.setSelected(true);
            sinhalaCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            notryRadio.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            sinhalaCheckBox.requestFocus();
        }
    }//GEN-LAST:event_maleRadioButtonKeyPressed

    private void femaleRadioButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_femaleRadioButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            maleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            femaleRadioButton.setSelected(true);
            sinhalaCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            judgeRadio.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            sinhalaCheckBox.requestFocus();
        }
    }//GEN-LAST:event_femaleRadioButtonKeyPressed

    private void sinhalaCheckBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sinhalaCheckBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            englishCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            maleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sinhalaCheckBox.setSelected(!sinhalaCheckBox.isSelected());
            englishCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            addressText.requestFocus();
        }
    }//GEN-LAST:event_sinhalaCheckBoxKeyPressed

    private void englishCheckBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_englishCheckBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            tamilCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            sinhalaCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            femaleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            englishCheckBox.setSelected(!englishCheckBox.isSelected());
            tamilCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            addressText.requestFocus();
        }
    }//GEN-LAST:event_englishCheckBoxKeyPressed

    private void tamilCheckBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tamilCheckBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            englishCheckBox.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            femaleRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tamilCheckBox.setSelected(!tamilCheckBox.isSelected());
            addressText.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            addressText.requestFocus();
        }
    }//GEN-LAST:event_tamilCheckBoxKeyPressed

    private void addOfficeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOfficeButtonActionPerformed
        new AddOffice(this, true).setVisible(true);
    }//GEN-LAST:event_addOfficeButtonActionPerformed

    private void setSaveButtonEnable() {
        if ((notryCodeText.getText().equals("") || nameText.getText().equals("")
                || addressText.getText().equals(""))) {
            saveButton.setEnabled(false);
        } else {
            saveButton.setEnabled(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNotry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNotry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNotry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNotry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                AddNotry dialog = new AddNotry(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addOfficeButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel dateOfApointmentLabel;
    private org.freixas.jcalendar.JCalendarCombo dateOfAppointementCalenderCombo;
    private javax.swing.JCheckBox englishCheckBox;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JRadioButton judgeRadio;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JLabel mediumLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.ButtonGroup nortyOrJudgeuttonGroup;
    private javax.swing.JLabel notryCodeLabel;
    private javax.swing.JTextField notryCodeText;
    private javax.swing.JLabel notryOrJudgeLabel;
    private javax.swing.JRadioButton notryRadio;
    private javax.swing.JComboBox officeComboBox;
    private javax.swing.JLabel officeLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox sinhalaCheckBox;
    private javax.swing.JCheckBox tamilCheckBox;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    public void initOfficeComboBox() {
        officeComboBox.removeAllItems();
        try {
            ArrayList<String> officeList = OfficeController.getOfficeList();
            for (int i = 0; i < officeList.size(); i++) {
                String office = officeList.get(i);
                officeComboBox.addItem(office);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddNotry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddNotry.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
