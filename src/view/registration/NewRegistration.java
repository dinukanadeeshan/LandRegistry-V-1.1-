/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.registration;

import controller.DayBookController;
import controller.DeedController;
import controller.GranteeController;
import controller.LandController;
import controller.RegistrationController;
import java.awt.Font;
import java.awt.Frame;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JViewport;
import javax.swing.Popup;
import model.Grantee;
import model.Grantor;
import model.RegistrationModel;
import model.User;
import others.IdGen;
import others.Validation;
import view.daybook.NewDayBookEntry;
import view.land.AddLand;
import view.main.MainFrame;

/**
 *
 * @author Nadeeshan
 */
public class NewRegistration extends javax.swing.JDialog {

    private ArrayList<String> deedInfo;
    private ArrayList<String> landInfo;
    private Popup popup;
    private Frame parent;
    private JDialog dialog;
    private NumberFormat numberFormat;
    private User user;
    private String grantorId;
    private String granteeId;
    private Rectangle viewportBorderBounds;
    private boolean isDialogLoad = false;

    /**
     * Creates new form NewRegistration
     */
    public NewRegistration(java.awt.Frame parent, boolean modal, User user) {
        super(parent, modal);
        this.parent = parent;
        this.user = user;
        initObject();

        isDialogLoad = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        registrationScrollPane = new javax.swing.JScrollPane();
        registrationPanel = new javax.swing.JPanel();
        landPanel = new javax.swing.JPanel();
        addLandButton = new javax.swing.JButton();
        roodText = new javax.swing.JTextField();
        villageText = new javax.swing.JTextField();
        volumeLabel = new javax.swing.JLabel();
        perchText = new javax.swing.JTextField();
        westText = new javax.swing.JTextField();
        folioText = new javax.swing.JTextField();
        northText = new javax.swing.JTextField();
        acreLabel = new javax.swing.JLabel();
        folioLabel = new javax.swing.JLabel();
        volumeText = new javax.swing.JTextField();
        eastText = new javax.swing.JTextField();
        acreText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        southLabel = new javax.swing.JLabel();
        eastLabel = new javax.swing.JLabel();
        localAuthorityLabel = new javax.swing.JLabel();
        northLabel = new javax.swing.JLabel();
        villageLabel = new javax.swing.JLabel();
        southText = new javax.swing.JTextField();
        westLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        boundaryLabel = new javax.swing.JLabel();
        perchLabel = new javax.swing.JLabel();
        localAuthorityText = new javax.swing.JTextField();
        roodLabel = new javax.swing.JLabel();
        extentLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        deedPanel = new javax.swing.JPanel();
        granteePanel = new javax.swing.JPanel();
        granteeNameText = new javax.swing.JTextField();
        granteeNameLabel = new javax.swing.JLabel();
        granteeAddressLabel = new javax.swing.JLabel();
        granteeAddressText = new javax.swing.JTextField();
        deedDateLabel = new javax.swing.JLabel();
        notryNoText = new javax.swing.JTextField();
        notryNoLabel = new javax.swing.JLabel();
        notryText = new javax.swing.JTextField();
        notryLabel = new javax.swing.JLabel();
        grantorPanel = new javax.swing.JPanel();
        grantorNameText = new javax.swing.JTextField();
        grantorNameLabell = new javax.swing.JLabel();
        grantorAddressLabel = new javax.swing.JLabel();
        grantorAddressText = new javax.swing.JTextField();
        regDutyText = new javax.swing.JTextField();
        natureOfDeedText = new javax.swing.JTextField();
        deedValueText = new javax.swing.JTextField();
        regDutyLabel = new javax.swing.JLabel();
        deedDateText = new javax.swing.JTextField();
        deedValueLabel = new javax.swing.JLabel();
        dayBookNoLabel = new javax.swing.JLabel();
        natureOfDeedLabel = new javax.swing.JLabel();
        bookTypeLabel = new javax.swing.JLabel();
        bookTypeComboBox = new javax.swing.JComboBox();
        dayBookNoText = new javax.swing.JTextField();
        registrationDetailPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarkTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registry");

        titleLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Land Registration");

        landPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Land", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        addLandButton.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        addLandButton.setText("Add Land");
        addLandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLandButtonActionPerformed(evt);
            }
        });

        roodText.setEditable(false);
        roodText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        roodText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        roodText.setText("0");
        roodText.setFocusable(false);
        roodText.setHighlighter(null);
        roodText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roodTextActionPerformed(evt);
            }
        });

        villageText.setEditable(false);
        villageText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        villageText.setFocusable(false);
        villageText.setHighlighter(null);

        volumeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        volumeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        volumeLabel.setText("Volume");

        perchText.setEditable(false);
        perchText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        perchText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        perchText.setText("0");
        perchText.setFocusable(false);
        perchText.setHighlighter(null);
        perchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perchTextActionPerformed(evt);
            }
        });

        westText.setEditable(false);
        westText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        westText.setFocusable(false);
        westText.setHighlighter(null);
        westText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                westTextActionPerformed(evt);
            }
        });

        folioText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        folioText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioTextActionPerformed(evt);
            }
        });
        folioText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                folioTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                folioTextKeyReleased(evt);
            }
        });

        northText.setEditable(false);
        northText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        northText.setFocusable(false);
        northText.setHighlighter(null);
        northText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northTextActionPerformed(evt);
            }
        });

        acreLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        acreLabel.setText("Acre");

        folioLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        folioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        folioLabel.setText("Folio");

        volumeText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        volumeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTextActionPerformed(evt);
            }
        });
        volumeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                volumeTextFocusGained(evt);
            }
        });
        volumeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                volumeTextKeyPressed(evt);
            }
        });

        eastText.setEditable(false);
        eastText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        eastText.setFocusable(false);
        eastText.setHighlighter(null);
        eastText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastTextActionPerformed(evt);
            }
        });

        acreText.setEditable(false);
        acreText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        acreText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        acreText.setText("0");
        acreText.setFocusable(false);
        acreText.setHighlighter(null);
        acreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acreTextActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        nameText.setFocusable(false);
        nameText.setHighlighter(null);

        southLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        southLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        southLabel.setText("South");

        eastLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        eastLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        eastLabel.setText("East");

        localAuthorityLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        localAuthorityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        localAuthorityLabel.setText("Local Authority ");

        northLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        northLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        northLabel.setText("North");

        villageLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        villageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        villageLabel.setText("Village");

        southText.setEditable(false);
        southText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        southText.setFocusable(false);
        southText.setHighlighter(null);
        southText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                southTextActionPerformed(evt);
            }
        });
        southText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                southTextFocusGained(evt);
            }
        });

        westLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        westLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        westLabel.setText("West");

        nameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name");

        boundaryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        boundaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        boundaryLabel.setText("Boundary :");

        perchLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        perchLabel.setText("Perch");

        localAuthorityText.setEditable(false);
        localAuthorityText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        localAuthorityText.setFocusable(false);
        localAuthorityText.setHighlighter(null);

        roodLabel.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 15)); // NOI18N
        roodLabel.setText("Rood");

        extentLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        extentLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        extentLabel.setText("Extent ");

        javax.swing.GroupLayout landPanelLayout = new javax.swing.GroupLayout(landPanel);
        landPanel.setLayout(landPanelLayout);
        landPanelLayout.setHorizontalGroup(
            landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landPanelLayout.createSequentialGroup()
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(landPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(landPanelLayout.createSequentialGroup()
                                .addComponent(boundaryLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(southText))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(northText)
                                            .addGroup(landPanelLayout.createSequentialGroup()
                                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(localAuthorityText, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(landPanelLayout.createSequentialGroup()
                                                        .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(13, 13, 13)
                                                        .addComponent(roodLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eastText))
                                    .addGroup(landPanelLayout.createSequentialGroup()
                                        .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(westText))))
                            .addGroup(landPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nameLabel)
                                    .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addComponent(volumeText)
                                .addGap(18, 18, 18)
                                .addComponent(folioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addLandButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landPanelLayout.createSequentialGroup()
                                .addGap(144, 144, 144)
                                .addComponent(nameText)))
                        .addGap(38, 38, 38))
                    .addGroup(landPanelLayout.createSequentialGroup()
                        .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(localAuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        landPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acreText, perchText, roodText});

        landPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {localAuthorityText, villageText});

        landPanelLayout.setVerticalGroup(
            landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volumeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(folioText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addLandButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localAuthorityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(localAuthorityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(villageText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(extentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roodText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(perchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boundaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(northText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eastLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eastText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(westLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(westText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(landPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(southLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(southText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        landPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {acreText, perchText, roodText});

        landPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {localAuthorityText, villageText});

        cancelButton.setFont(new java.awt.Font("Lucida Bright", 1, 17)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/edit-delete-7.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        registerButton.setFont(new java.awt.Font("Lucida Bright", 1, 17)); // NOI18N
        registerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/rezound.png"))); // NOI18N
        registerButton.setText("Register");
        registerButton.setEnabled(false);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        registerButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                registerButtonKeyPressed(evt);
            }
        });

        deedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Deed", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        granteePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grantee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 15))); // NOI18N

        granteeNameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        granteeNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                granteeNameTextActionPerformed(evt);
            }
        });
        granteeNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                granteeNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                granteeNameTextKeyReleased(evt);
            }
        });

        granteeNameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        granteeNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        granteeNameLabel.setText("Name");

        granteeAddressLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        granteeAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        granteeAddressLabel.setText("Address");

        granteeAddressText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        granteeAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                granteeAddressTextActionPerformed(evt);
            }
        });
        granteeAddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                granteeAddressTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                granteeAddressTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout granteePanelLayout = new javax.swing.GroupLayout(granteePanel);
        granteePanel.setLayout(granteePanelLayout);
        granteePanelLayout.setHorizontalGroup(
            granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(granteePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(granteeAddressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                    .addComponent(granteeNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(granteeNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(granteeAddressText))
                .addContainerGap())
        );
        granteePanelLayout.setVerticalGroup(
            granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(granteePanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(granteeNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(granteeNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(granteePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(granteeAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(granteeAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deedDateLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        deedDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deedDateLabel.setText("Deed Date");

        notryNoText.setEditable(false);
        notryNoText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        notryNoText.setFocusable(false);
        notryNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notryNoTextActionPerformed(evt);
            }
        });

        notryNoLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryNoLabel.setText("Deed No");

        notryText.setEditable(false);
        notryText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        notryText.setFocusable(false);

        notryLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        notryLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        notryLabel.setText("Notry");

        grantorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grantor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 15))); // NOI18N

        grantorNameText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        grantorNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantorNameTextActionPerformed(evt);
            }
        });
        grantorNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grantorNameTextFocusGained(evt);
            }
        });
        grantorNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grantorNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grantorNameTextKeyReleased(evt);
            }
        });

        grantorNameLabell.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        grantorNameLabell.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grantorNameLabell.setText("Name");

        grantorAddressLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        grantorAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grantorAddressLabel.setText("Address");

        grantorAddressText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        grantorAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grantorAddressTextActionPerformed(evt);
            }
        });
        grantorAddressText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grantorAddressTextFocusGained(evt);
            }
        });
        grantorAddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grantorAddressTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grantorAddressTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout grantorPanelLayout = new javax.swing.GroupLayout(grantorPanel);
        grantorPanel.setLayout(grantorPanelLayout);
        grantorPanelLayout.setHorizontalGroup(
            grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grantorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grantorAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(grantorPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(grantorNameLabell, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grantorAddressText, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(grantorNameText))
                .addContainerGap())
        );
        grantorPanelLayout.setVerticalGroup(
            grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grantorPanelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grantorNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grantorNameLabell, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(grantorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grantorAddressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grantorAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        regDutyText.setEditable(false);
        regDutyText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        regDutyText.setFocusable(false);
        regDutyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regDutyTextActionPerformed(evt);
            }
        });

        natureOfDeedText.setEditable(false);
        natureOfDeedText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        natureOfDeedText.setFocusable(false);
        natureOfDeedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                natureOfDeedTextActionPerformed(evt);
            }
        });

        deedValueText.setEditable(false);
        deedValueText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        deedValueText.setFocusable(false);
        deedValueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deedValueTextActionPerformed(evt);
            }
        });

        regDutyLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        regDutyLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        regDutyLabel.setText("Reg Duty");

        deedDateText.setEditable(false);
        deedDateText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        deedDateText.setFocusable(false);

        deedValueLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        deedValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deedValueLabel.setText("Deed Value");

        dayBookNoLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        dayBookNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dayBookNoLabel.setText("Day Book No");

        natureOfDeedLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        natureOfDeedLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        natureOfDeedLabel.setText("Nature of Deed");

        bookTypeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        bookTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bookTypeLabel.setText("Book Type");

        bookTypeComboBox.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        bookTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTypeComboBoxActionPerformed(evt);
            }
        });
        bookTypeComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bookTypeComboBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bookTypeComboBoxKeyReleased(evt);
            }
        });

        dayBookNoText.setEditable(false);
        dayBookNoText.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        dayBookNoText.setFocusable(false);
        dayBookNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayBookNoTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deedPanelLayout = new javax.swing.GroupLayout(deedPanel);
        deedPanel.setLayout(deedPanelLayout);
        deedPanelLayout.setHorizontalGroup(
            deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deedPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(grantorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(granteePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(deedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bookTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(natureOfDeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(notryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deedValueLabel))
                .addGap(18, 18, 18)
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(natureOfDeedText)
                    .addComponent(notryText)
                    .addComponent(deedValueText)
                    .addComponent(bookTypeComboBox, 0, 229, Short.MAX_VALUE))
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deedPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deedDateLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deedPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regDutyLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(notryNoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayBookNoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dayBookNoText, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(deedDateText)
                    .addComponent(notryNoText)
                    .addComponent(regDutyText))
                .addGap(40, 40, 40))
        );
        deedPanelLayout.setVerticalGroup(
            deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deedPanelLayout.createSequentialGroup()
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(deedPanelLayout.createSequentialGroup()
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bookTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(natureOfDeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(natureOfDeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(notryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deedValueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deedValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(deedPanelLayout.createSequentialGroup()
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dayBookNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dayBookNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deedDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deedDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(notryNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notryNoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(regDutyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(regDutyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(deedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(granteePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(grantorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        registrationDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registration Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 3, 16))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html> Nature And Particulars of<br> Alienation and Incum ranges  </html>");

        remarkTextArea.setColumns(20);
        remarkTextArea.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        remarkTextArea.setLineWrap(true);
        remarkTextArea.setRows(5);
        remarkTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                remarkTextAreaFocusGained(evt);
            }
        });
        remarkTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                remarkTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                remarkTextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(remarkTextArea);

        javax.swing.GroupLayout registrationDetailPanelLayout = new javax.swing.GroupLayout(registrationDetailPanel);
        registrationDetailPanel.setLayout(registrationDetailPanelLayout);
        registrationDetailPanelLayout.setHorizontalGroup(
            registrationDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        registrationDetailPanelLayout.setVerticalGroup(
            registrationDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationDetailPanelLayout.createSequentialGroup()
                .addGroup(registrationDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationDetailPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addGroup(registrationDetailPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout registrationPanelLayout = new javax.swing.GroupLayout(registrationPanel);
        registrationPanel.setLayout(registrationPanelLayout);
        registrationPanelLayout.setHorizontalGroup(
            registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registrationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(registrationPanelLayout.createSequentialGroup()
                        .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(registrationDetailPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(landPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deedPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(32, Short.MAX_VALUE))))
        );
        registrationPanelLayout.setVerticalGroup(
            registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registrationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(landPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrationDetailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        registrationPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, registerButton});

        registrationScrollPane.setViewportView(registrationPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registrationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registrationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void notryNoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notryNoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notryNoTextActionPerformed

    private void deedValueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deedValueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deedValueTextActionPerformed

    private void regDutyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regDutyTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regDutyTextActionPerformed

    private void grantorNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantorNameTextActionPerformed
        grantorAddressText.requestFocus();
    }//GEN-LAST:event_grantorNameTextActionPerformed

    private void granteeNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_granteeNameTextActionPerformed
        granteeAddressText.requestFocus();
    }//GEN-LAST:event_granteeNameTextActionPerformed

    private void addLandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLandButtonActionPerformed
        new AddLand(parent, true, this, volumeText.getText(), folioText.getText()).show();
    }//GEN-LAST:event_addLandButtonActionPerformed

    private void acreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acreTextActionPerformed
        roodText.requestFocus();
    }//GEN-LAST:event_acreTextActionPerformed

    private void roodTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roodTextActionPerformed
        perchText.requestFocus();
    }//GEN-LAST:event_roodTextActionPerformed

    private void perchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perchTextActionPerformed
        northText.requestFocus();
    }//GEN-LAST:event_perchTextActionPerformed

    private void southTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_southTextActionPerformed
        volumeText.requestFocus();
    }//GEN-LAST:event_southTextActionPerformed

    private void eastTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastTextActionPerformed
        southText.requestFocus();
    }//GEN-LAST:event_eastTextActionPerformed

    private void westTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_westTextActionPerformed
        eastText.requestFocus();
    }//GEN-LAST:event_westTextActionPerformed

    private void northTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northTextActionPerformed
        westText.requestFocus();
    }//GEN-LAST:event_northTextActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void volumeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTextActionPerformed
        folioText.requestFocus();
    }//GEN-LAST:event_volumeTextActionPerformed

    private void folioTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioTextActionPerformed

        try {
            landInfo = null;
            landInfo = LandController.getLandInfo(volumeText.getText(), Integer.parseInt(folioText.getText()));
            nameText.setText(landInfo.get(0));
            localAuthorityText.setText(landInfo.get(1));
            villageText.setText(landInfo.get(2));
            acreText.setText(landInfo.get(3));
            roodText.setText(landInfo.get(4));
            perchText.setText(landInfo.get(5));
            northText.setText(landInfo.get(6));
            westText.setText(landInfo.get(7));
            eastText.setText(landInfo.get(8));
            southText.setText(landInfo.get(9));
            remarkTextArea.requestFocus();
            nameText.setEditable(false);
            localAuthorityText.setEditable(false);
            villageText.setEditable(false);
            acreText.setEditable(false);
            roodText.setEditable(false);
            perchText.setEditable(false);
            northText.setEditable(false);
            westText.setEditable(false);
            eastText.setEditable(false);
            southText.setEditable(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
//            
            if (ex.getMessage().contains("empty result set")) {
                addLandButton.doClick();
            } else {
                JOptionPane.showMessageDialog(this, ex.getErrorCode() + " - " + ex.getMessage());
            }
        }

    }//GEN-LAST:event_folioTextActionPerformed

    private void natureOfDeedTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_natureOfDeedTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_natureOfDeedTextActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String deedId = deedInfo.get(7);
        String landCode = landInfo.get(10);
        String remark = remarkTextArea.getText();
        Date registeredDate = new Date(new java.util.Date().getTime());


        try {
            if (RegistrationController.doRegistration(new RegistrationModel(deedId, landCode, remark, registeredDate), new Grantor(grantorId, grantorNameText.getText(), grantorAddressText.getText()), new Grantee(granteeId, granteeNameText.getText(), granteeAddressText.getText())) > 0) {
                JLabel messageLabel = new JLabel("<html>Registration Successfull....<br><br>Do you want to perform another Registration?</html>");
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                int res = JOptionPane.showConfirmDialog(this, messageLabel, "", JOptionPane.YES_NO_OPTION);
                if (res == 0) {
                    setTextFieldsEmpty();
                } else {
                    this.dispose();

                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getErrorCode() + " - " + ex.getMessage());
            ex.printStackTrace();
        }


//        if (dialog != null) {
//            this.dispose();
//            ((ViewUnregisteredDeeds) dialog).reload();
//        }

    }//GEN-LAST:event_registerButtonActionPerformed

    private void grantorAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grantorAddressTextActionPerformed
        granteeNameText.requestFocus();
    }//GEN-LAST:event_grantorAddressTextActionPerformed

    private void granteeAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_granteeAddressTextActionPerformed
        if (volumeText.getText().equals("")) {
            volumeText.requestFocus();
        } else {
            remarkTextArea.requestFocus();
        }
        if (!(deedInfo.get(8).equals("") || deedInfo.get(9).equals(""))) {
            folioText.postActionEvent();
        }
    }//GEN-LAST:event_granteeAddressTextActionPerformed

    private void folioTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyReleased
        try {
            if (!Validation.validateInt(folioText.getText())) {
                folioText.setText(folioText.getText().substring(0, folioText.getText().length() - 1));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_folioTextKeyReleased

    private void grantorNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grantorNameTextKeyReleased
        try {
            String text = grantorNameText.getText();
            if (!Validation.validateName(text)) {
                grantorNameText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setRegisterButtonEnablity();
    }//GEN-LAST:event_grantorNameTextKeyReleased

    private void granteeNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_granteeNameTextKeyReleased
        try {
            String text = granteeNameText.getText();
            if (!Validation.validateName(text)) {
                granteeNameText.setText(text.substring(0, text.length() - 1));
            }
        } catch (Exception e) {
        }
        setRegisterButtonEnablity();
    }//GEN-LAST:event_granteeNameTextKeyReleased

    private void granteeAddressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_granteeAddressTextKeyReleased
        setRegisterButtonEnablity();
    }//GEN-LAST:event_granteeAddressTextKeyReleased

    private void grantorAddressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grantorAddressTextKeyReleased
        setRegisterButtonEnablity();
    }//GEN-LAST:event_grantorAddressTextKeyReleased

    private void remarkTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remarkTextAreaKeyReleased
        setRegisterButtonEnablity();
    }//GEN-LAST:event_remarkTextAreaKeyReleased

    private void grantorNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grantorNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            bookTypeComboBox.requestFocus();
        }

    }//GEN-LAST:event_grantorNameTextKeyPressed

    private void remarkTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remarkTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerButton.requestFocus();
        }
    }//GEN-LAST:event_remarkTextAreaKeyPressed

    private void registerButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_registerButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerButton.doClick();
        }
    }//GEN-LAST:event_registerButtonKeyPressed

    private void folioTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            volumeText.requestFocus();
        }
    }//GEN-LAST:event_folioTextKeyPressed

    private void volumeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_volumeTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            granteeAddressText.requestFocus();
        }
    }//GEN-LAST:event_volumeTextKeyPressed

    private void granteeAddressTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_granteeAddressTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            granteeNameText.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            grantorAddressText.requestFocus();
        }
    }//GEN-LAST:event_granteeAddressTextKeyPressed

    private void granteeNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_granteeNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            grantorAddressText.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            grantorAddressText.requestFocus();
        }

    }//GEN-LAST:event_granteeNameTextKeyPressed

    private void grantorAddressTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grantorAddressTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            grantorNameText.requestFocus();
        }
    }//GEN-LAST:event_grantorAddressTextKeyPressed

    private void bookTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTypeComboBoxActionPerformed

        try {
            dayBookNoText.setText(DayBookController.getDayBookNoToRegister(bookTypeComboBox.getSelectedItem().toString()));
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
            if (ex.getMessage().contains("empty result set")) {
                natureOfDeedText.setText("");
                notryText.setText("");
                notryNoText.setText("");
                deedDateText.setText("");
                deedValueText.setText("");
                regDutyText.setText("");
                grantorNameText.setText("");
                granteeNameText.setText("");
                granteeAddressText.setText("");
                grantorAddressText.setText("");
                dayBookNoText.setText("");
                JLabel messageLabel = new JLabel("<html>There is no any Day Book Record of " + bookTypeComboBox.getSelectedItem().toString() + " book to Register.<br>Do You want to add New Day Book Record??</html>");
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                int res = JOptionPane.showConfirmDialog(this, messageLabel, "", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (res == 0) {
                    NewDayBookEntry dayBookEntry = new NewDayBookEntry(parent, true, this, user, bookTypeComboBox.getSelectedItem().toString());
                    dayBookEntry.setVisible(true);
                } else {
                    if (!isDialogLoad) {
                        this.dispose();
                    }
                }
            } else {
                JLabel messageLabel = new JLabel(ex.getErrorCode() + " - " + ex.getMessage());
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLabel, "", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (!dayBookNoText.getText().equals("")) {
            setDeedInfo(dayBookNoText.getText());
        }
    }//GEN-LAST:event_bookTypeComboBoxActionPerformed

    private void bookTypeComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bookTypeComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            grantorNameText.requestFocus();
        }
    }//GEN-LAST:event_bookTypeComboBoxKeyPressed

    private void bookTypeComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bookTypeComboBoxKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_bookTypeComboBoxKeyReleased

    private void dayBookNoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayBookNoTextActionPerformed
    }//GEN-LAST:event_dayBookNoTextActionPerformed

    private void southTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_southTextFocusGained
    }//GEN-LAST:event_southTextFocusGained

    private void volumeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_volumeTextFocusGained
        JViewport viewport = registrationScrollPane.getViewport();
        Rectangle borderBounds = viewportBorderBounds;
        borderBounds.setBounds((int) borderBounds.getMinX(), (int) borderBounds.getMaxY(), (int) borderBounds.getWidth(), (int) viewportBorderBounds.getHeight());
        viewport.scrollRectToVisible(borderBounds);
    }//GEN-LAST:event_volumeTextFocusGained

    private void grantorAddressTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grantorAddressTextFocusGained
//        JScrollBar horizontalScrollBar = registrationScrollPane.getHorizontalScrollBar();
//        horizontalScrollBar.setValueIsAdjusting(true);
//        horizontalScrollBar.setValue(0);
//        registrationScrollPane.setHorizontalScrollBar(horizontalScrollBar);
    }//GEN-LAST:event_grantorAddressTextFocusGained

    private void remarkTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_remarkTextAreaFocusGained
        JViewport viewport = registrationScrollPane.getViewport();
        Rectangle borderBounds = viewportBorderBounds;
        borderBounds.setBounds((int) borderBounds.getMinX(), (int) borderBounds.getMaxY(), (int) borderBounds.getWidth(), (int) viewportBorderBounds.getHeight());
        viewport.scrollRectToVisible(borderBounds);
    }//GEN-LAST:event_remarkTextAreaFocusGained

    private void grantorNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grantorNameTextFocusGained
    }//GEN-LAST:event_grantorNameTextFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                NewRegistration dialog = null;

                dialog = new NewRegistration(new MainFrame(new User()), true, new User());

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acreLabel;
    private javax.swing.JTextField acreText;
    private javax.swing.JButton addLandButton;
    private javax.swing.JComboBox bookTypeComboBox;
    private javax.swing.JLabel bookTypeLabel;
    private javax.swing.JLabel boundaryLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel dayBookNoLabel;
    private javax.swing.JTextField dayBookNoText;
    private javax.swing.JLabel deedDateLabel;
    private javax.swing.JTextField deedDateText;
    private javax.swing.JPanel deedPanel;
    private javax.swing.JLabel deedValueLabel;
    private javax.swing.JTextField deedValueText;
    private javax.swing.JLabel eastLabel;
    private javax.swing.JTextField eastText;
    private javax.swing.JLabel extentLabel;
    private javax.swing.JLabel folioLabel;
    private javax.swing.JTextField folioText;
    private javax.swing.JLabel granteeAddressLabel;
    private javax.swing.JTextField granteeAddressText;
    private javax.swing.JLabel granteeNameLabel;
    private javax.swing.JTextField granteeNameText;
    private javax.swing.JPanel granteePanel;
    private javax.swing.JLabel grantorAddressLabel;
    private javax.swing.JTextField grantorAddressText;
    private javax.swing.JLabel grantorNameLabell;
    private javax.swing.JTextField grantorNameText;
    private javax.swing.JPanel grantorPanel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel landPanel;
    private javax.swing.JLabel localAuthorityLabel;
    private javax.swing.JTextField localAuthorityText;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel natureOfDeedLabel;
    private javax.swing.JTextField natureOfDeedText;
    private javax.swing.JLabel northLabel;
    private javax.swing.JTextField northText;
    private javax.swing.JLabel notryLabel;
    private javax.swing.JLabel notryNoLabel;
    private javax.swing.JTextField notryNoText;
    private javax.swing.JTextField notryText;
    private javax.swing.JLabel perchLabel;
    private javax.swing.JTextField perchText;
    private javax.swing.JLabel regDutyLabel;
    private javax.swing.JTextField regDutyText;
    private javax.swing.JButton registerButton;
    private javax.swing.JPanel registrationDetailPanel;
    private javax.swing.JPanel registrationPanel;
    private javax.swing.JScrollPane registrationScrollPane;
    private javax.swing.JTextArea remarkTextArea;
    private javax.swing.JLabel roodLabel;
    private javax.swing.JTextField roodText;
    private javax.swing.JLabel southLabel;
    private javax.swing.JTextField southText;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JTextField villageText;
    private javax.swing.JLabel volumeLabel;
    private javax.swing.JTextField volumeText;
    private javax.swing.JLabel westLabel;
    private javax.swing.JTextField westText;
    // End of variables declaration//GEN-END:variables
//    public void setDayBookNoAndYear(String dayBookNo, String year){
//        dayBookNoText.setText(dayBookNo);
//        dayBookNoText.postActionEvent();
//    }

    public void setVolumeAndFolio(String volume, String folio) {
        volumeText.setText(volume);
        folioText.setText(folio);
        folioText.postActionEvent();
    }

    private void setTextFieldsEmpty() {
        natureOfDeedText.setText("");
        notryText.setText("");
        notryNoText.setText("");
        deedDateText.setText("");
        deedValueText.setText("");
        regDutyText.setText("");
        grantorNameText.setText("");
        granteeNameText.setText("");
        volumeText.setText("");
        folioText.setText("");
        nameText.setText("");
        localAuthorityText.setText("");
        acreText.setText("0");
        roodText.setText("0");
        perchText.setText("0");
        northText.setText("");
        westText.setText("");
        eastText.setText("");
        southText.setText("");
        remarkTextArea.setText("");
        granteeAddressText.setText("");
        grantorAddressText.setText("");
        dayBookNoText.setText("");
        landInfo = null;
        deedInfo = null;
        try {
            granteeId = IdGen.getNextId("Grantee", "GeId", "Ge");
            grantorId = IdGen.getNextId("Grantor", "GrId", "Gr");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        bookTypeComboBox.requestFocus();
    }

//    private void iniDayBookNoComboBox() {
//        dayBookNoComboBox.removeAllItems();
//        try {
//            ArrayList<String> unRegisteredDayBookNoList = DayBookController.getUnRegisteredDayBookNoList();
//            for (int i = 0; i < unRegisteredDayBookNoList.size(); i++) {
//                String dayBookNo = unRegisteredDayBookNoList.get(i);
//                dayBookNoComboBox.addItem(dayBookNo);
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//    }
    private void initBookTypeCombo() {
        bookTypeComboBox.removeAllItems();
        bookTypeComboBox.addItem("General");
        bookTypeComboBox.addItem("LDO");
    }

    private void initObject() {

        initComponents();

        setLocation(345, 25);
        numberFormat = NumberFormat.getCurrencyInstance();
        try {
            granteeId = IdGen.getNextId("Grantee", "GeId", "Ge");
            grantorId = IdGen.getNextId("Grantor", "GrId", "Gr");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        //iniDayBookNoComboBox();
        initBookTypeCombo();
        viewportBorderBounds = registrationScrollPane.getViewportBorderBounds();


    }

    private void setRegisterButtonEnablity() {
        boolean condition = grantorNameText.getText().equals("") || grantorAddressText.getText().equals("") || granteeNameText.getText().equals("")
                || granteeAddressText.getText().equals("") || volumeText.getText().equals("") || folioText.getText().equals("") || remarkTextArea.getText().equals("");
        registerButton.setEnabled(!condition);

    }

    public void setDeedInfo(java.lang.String dayBookNo) throws HeadlessException, NumberFormatException {
        try {
            deedInfo = null;
            deedInfo = DeedController.getDeedInfo(dayBookNo);
            dayBookNoText.setText(dayBookNo);
            natureOfDeedText.setText(deedInfo.get(1));
            notryText.setText(deedInfo.get(2) + " - " + deedInfo.get(10));
            notryNoText.setText(deedInfo.get(3));
            deedDateText.setText(deedInfo.get(4));
            deedValueText.setText(deedInfo.get(5));
            regDutyText.setText(numberFormat.format(Double.parseDouble(deedInfo.get(6))).substring(1));

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getErrorCode() + " - " + ex.getMessage());
        }
        if (!(deedInfo.get(8).equals("") || deedInfo.get(9).equals(""))) {
            try {
                volumeText.setText(deedInfo.get(8));
                folioText.setText(deedInfo.get(9));
                String landCode = LandController.getLandInfo(volumeText.getText(), Integer.parseInt(folioText.getText())).get(10);
                Grantee grantee = GranteeController.getGranteeForLand(landCode);
                grantorAddressText.setText(grantee.getAddress());
                grantorNameText.setText(grantee.getName());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                grantorAddressText.setText("");
                grantorNameText.setText("");
                Logger.getLogger(NewRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            grantorAddressText.setText("");
            grantorNameText.setText("");
        }
    }
}
