/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.registration;

import controller.DeedController;
import controller.LandController;
import controller.RegistrationController;
import controller.UserController;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;
import model.User;

/**
 *
 * @author Nadeeshan
 */
public class UndoRegistration extends javax.swing.JDialog {

    DateFormat dateFormat;
    User user;

    /**
     * Creates new form UndoRegistration
     */
    public UndoRegistration(java.awt.Frame parent, boolean modal, User user) {
        super(parent, modal);
        this.user = user;
        initComponents();
        setLocation(406, 90);
        dateFormat = DateFormat.getDateInstance(DateFormat.MEDIUM);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        infoTableScrollPane = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        reloadButton = new javax.swing.JButton();
        closelButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        calendarCombo = new org.freixas.jcalendar.JCalendarCombo();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Undo Registration");

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day Book No", "Book Type", "Volume", "Folio", "Land Name", "Village", "Extent", "Lot No", "Notry", "Deed No", "Value", "Reg. Duty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        infoTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        infoTable.getTableHeader().setReorderingAllowed(false);
        infoTableScrollPane.setViewportView(infoTable);

        reloadButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reloadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/view-refresh-3.png"))); // NOI18N
        reloadButton.setText("Reload");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });

        closelButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        closelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/window-close-3.png"))); // NOI18N
        closelButton.setText("Close");
        closelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closelButtonActionPerformed(evt);
            }
        });

        undoButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        undoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/edit-undo-6.png"))); // NOI18N
        undoButton.setText("Undo ");
        undoButton.setEnabled(false);
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });

        calendarCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                calendarComboMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                calendarComboMouseExited(evt);
            }
        });
        calendarCombo.addDateListener(new org.freixas.jcalendar.DateListener() {
            public void dateChanged(org.freixas.jcalendar.DateEvent evt) {
                calendarComboDateChanged(evt);
            }
        });
        calendarCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                calendarComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        calendarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calendarComboActionPerformed(evt);
            }
        });
        calendarCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                calendarComboFocusLost(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        jLabel1.setText("Date :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(reloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(undoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(closelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(312, 312, 312))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calendarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closelButton, reloadButton, undoButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calendarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reloadButton)
                    .addComponent(closelButton)
                    .addComponent(undoButton))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {closelButton, reloadButton, undoButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        dateFormat = DateFormat.getDateInstance(DateFormat.SHORT);
        String date = dateFormat.format(calendarCombo.getDate());
        System.out.println(date);
        String[] formatDate = date.split("/");
        date = formatDate[2] + "/" + formatDate[1] + "/" + formatDate[0];
        int rowCount = infoTable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            ((DefaultTableModel) infoTable.getModel()).removeRow(0);
        }
        try {
            if (RegistrationController.isRegistrationAvailableFor(date)) {
                ArrayList<ArrayList<String>> list = RegistrationController.getRegistrationInfo(date);
                for (int i = 0; i < list.size(); i++) {
                    ArrayList<String> registrationInfo = list.get(i);
                    String booktype = registrationInfo.get(0).startsWith("L") ? "LDO" : "General";
                    String extent = "A " + registrationInfo.get(5) + "/ R " + registrationInfo.get(6) + "/ P " + registrationInfo.get(7);
                    String notry = registrationInfo.get(9) + " - " + registrationInfo.get(10);
                    Object[] row = {registrationInfo.get(0), booktype, registrationInfo.get(1), registrationInfo.get(2),
                        registrationInfo.get(3), registrationInfo.get(4), extent, registrationInfo.get(8), notry, registrationInfo.get(11),
                        registrationInfo.get(12), registrationInfo.get(13)};
                    ((DefaultTableModel) infoTable.getModel()).addRow(row);
                }
            } else {
                JLabel messageLabel = new JLabel("No any registration for -" + date);
                messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLabel);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewDailyRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewDailyRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_reloadButtonActionPerformed

    private void closelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closelButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        if (infoTable.getSelectedRow() >= 0) {
            try {

                int selectedRow = infoTable.getSelectedRow();
                String dayBookNo = (String) infoTable.getValueAt(selectedRow, 0);
                String volume = (String) infoTable.getValueAt(selectedRow, 2);
                int folio = Integer.parseInt((String) infoTable.getValueAt(selectedRow, 3));

                String landCode = LandController.getLandCode(volume, folio);
                String deedId = DeedController.getDeedId(dayBookNo);
                int res = RegistrationController.undoRegistration(landCode, deedId);
                if (res > 0) {
                    JLabel messageLabel = new JLabel("Undo registration done...");
                    messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                    JOptionPane.showMessageDialog(this, messageLabel);
                    reloadButton.doClick();
                }


            } catch (HeadlessException ex) {
                Logger.getLogger(UndoRegistration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(UndoRegistration.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(UndoRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JLabel messageLabel = new JLabel("Select an Row...");
            messageLabel.setFont(new Font("High Tower Text", Font.PLAIN, 18));
            JOptionPane.showMessageDialog(this, messageLabel, "", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_undoButtonActionPerformed

    private void calendarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarComboActionPerformed
//        reloadButton.doClick();
    }//GEN-LAST:event_calendarComboActionPerformed

    private void calendarComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calendarComboMouseEntered
        calendarCombo.showPopup();
    }//GEN-LAST:event_calendarComboMouseEntered

    private void calendarComboMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calendarComboMouseExited
    }//GEN-LAST:event_calendarComboMouseExited

    private void calendarComboDateChanged(org.freixas.jcalendar.DateEvent evt) {//GEN-FIRST:event_calendarComboDateChanged
//        reloadButton.doClick();
    }//GEN-LAST:event_calendarComboDateChanged

    private void calendarComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_calendarComboFocusLost
    }//GEN-LAST:event_calendarComboFocusLost

    private void calendarComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_calendarComboPopupMenuWillBecomeInvisible
        reloadButton.doClick();
    }//GEN-LAST:event_calendarComboPopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UndoRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UndoRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UndoRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UndoRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UndoRegistration dialog = new UndoRegistration(new javax.swing.JFrame(), true, new User());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.freixas.jcalendar.JCalendarCombo calendarCombo;
    private javax.swing.JButton closelButton;
    private javax.swing.JTable infoTable;
    private javax.swing.JScrollPane infoTableScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton reloadButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables

    private boolean isPasswordValid() throws HeadlessException, SQLException, ClassNotFoundException {
        JPasswordField passwordField = new JPasswordField(10);
        JPanel passwordFieldPanel = new JPanel();
        passwordFieldPanel.add(passwordField);
        JLabel label = new JLabel("Enter Password..");
        JPanel panel = new JPanel(new GridLayout(1, 2, 2, 0));
        panel.add(label);
        panel.add(passwordFieldPanel);
        JOptionPane.showMessageDialog(this, panel);
        passwordField.requestFocus();
        int privilage = UserController.searchUser(user.getUserName(), new String(passwordField.getPassword()));
        return privilage != -1;
    }
}
