/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.user;

import controller.UserController;
import java.awt.Dialog;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.User;
import others.Validation;
import view.startup.SplashScreen;

/**
 *
 * @author Nadeeshan
 */
public class AddUser extends javax.swing.JDialog {

    Dialog parent;
    /**
     * Creates new form AddUser
     */
    public AddUser(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        setLocationRelativeTo(null);
    }
    public AddUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountTypeButtonGroup = new javax.swing.ButtonGroup();
        titleLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        verifyPasswordLabel = new javax.swing.JLabel();
        userNameTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        verifyPasswordField = new javax.swing.JPasswordField();
        accountTypeLabel = new javax.swing.JLabel();
        administratorRadioButton = new javax.swing.JRadioButton();
        limitedRadioButton = new javax.swing.JRadioButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        pictureLabel = new javax.swing.JLabel();
        warningLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("New User");

        userNameLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 16)); // NOI18N
        userNameLabel.setLabelFor(userNameTextField);
        userNameLabel.setText("User Name");

        passwordLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 16)); // NOI18N
        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText("Password");

        verifyPasswordLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 2, 16)); // NOI18N
        verifyPasswordLabel.setText("Verify Password");

        userNameTextField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        userNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextFieldActionPerformed(evt);
            }
        });
        userNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userNameTextFieldKeyReleased(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
        });

        verifyPasswordField.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        verifyPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyPasswordFieldActionPerformed(evt);
            }
        });
        verifyPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                verifyPasswordFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                verifyPasswordFieldKeyReleased(evt);
            }
        });

        accountTypeLabel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N
        accountTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        accountTypeLabel.setText("Account Type");

        accountTypeButtonGroup.add(administratorRadioButton);
        administratorRadioButton.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        administratorRadioButton.setText("Administrator");
        administratorRadioButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                administratorRadioButtonKeyPressed(evt);
            }
        });

        accountTypeButtonGroup.add(limitedRadioButton);
        limitedRadioButton.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        limitedRadioButton.setSelected(true);
        limitedRadioButton.setText("Limited");
        limitedRadioButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                limitedRadioButtonKeyPressed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/document-save-5.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        saveButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                saveButtonKeyPressed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/window-close-3.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        cancelButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelButtonKeyPressed(evt);
            }
        });

        pictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/user-new-3.png"))); // NOI18N

        warningLabel.setFont(new java.awt.Font("Bradley Hand ITC", 1, 16)); // NOI18N
        warningLabel.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(verifyPasswordLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verifyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(accountTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelButton)
                            .addGap(31, 31, 31))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(administratorRadioButton)
                            .addGap(18, 18, 18)
                            .addComponent(limitedRadioButton)
                            .addGap(47, 47, 47)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, saveButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {passwordField, userNameTextField, verifyPasswordField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(verifyPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(verifyPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(accountTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(administratorRadioButton)
                            .addComponent(limitedRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(cancelButton)))
                    .addComponent(pictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {passwordField, userNameTextField, verifyPasswordField});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        verifyPasswordField.requestFocus();
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void verifyPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyPasswordFieldActionPerformed
        if (new String(passwordField.getPassword()).equals(new String(verifyPasswordField.getPassword()))) {
            administratorRadioButton.requestFocus();
        } else {
            warningLabel.setText("Password doesn't Match, Try again!");
            passwordField.setText("");
            verifyPasswordField.setText("");
            passwordField.requestFocus();
        }
    }//GEN-LAST:event_verifyPasswordFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void userNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextFieldActionPerformed
        passwordField.requestFocus();
    }//GEN-LAST:event_userNameTextFieldActionPerformed

    private void userNameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextFieldKeyReleased
        try {
            String text = userNameTextField.getText();
            if (!Validation.validateUserName(text)) {
                int caretPosition = userNameTextField.getCaretPosition();
                userNameTextField.setText(text.substring(0, caretPosition - 1)+""+text.substring(caretPosition));
                userNameTextField.setCaretPosition(caretPosition - 1);
            }
            setSaveButtonEnability();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userNameTextFieldKeyReleased

    private void administratorRadioButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_administratorRadioButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            limitedRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            saveButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            administratorRadioButton.setSelected(true);
            saveButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            verifyPasswordField.requestFocus();
        }
    }//GEN-LAST:event_administratorRadioButtonKeyPressed

    private void limitedRadioButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_limitedRadioButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            administratorRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            limitedRadioButton.setSelected(true);
            saveButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            saveButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            verifyPasswordField.requestFocus();
        }
    }//GEN-LAST:event_limitedRadioButtonKeyPressed

    private void verifyPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verifyPasswordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            passwordField.requestFocus();
        }
        warningLabel.setText("");
        setSaveButtonEnability();
    }//GEN-LAST:event_verifyPasswordFieldKeyPressed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            userNameTextField.requestFocus();
        }
        warningLabel.setText("");
        setSaveButtonEnability();
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void saveButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saveButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            saveButton.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            cancelButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            administratorRadioButton.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            limitedRadioButton.requestFocus();
        }
    }//GEN-LAST:event_saveButtonKeyPressed

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        setSaveButtonEnability();
    }//GEN-LAST:event_passwordFieldKeyReleased

    private void verifyPasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verifyPasswordFieldKeyReleased
        setSaveButtonEnability();
    }//GEN-LAST:event_verifyPasswordFieldKeyReleased

    private void cancelButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cancelButton.doClick();
        }
    }//GEN-LAST:event_cancelButtonKeyPressed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String userName = userNameTextField.getText();
        String password = new String(passwordField.getPassword());
        int privilage = administratorRadioButton.isSelected() ? 0 : 1;
        User user = new User(userName, password, privilage);
        try {
            int res = UserController.addUser(user);
            if (res > 0) {
                 JLabel messageLable = new JLabel("Saved Successfully...");
                messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLable);
                userNameTextField.setText("");
                passwordField.setText("");
                verifyPasswordField.setText("");
                saveButton.setEnabled(false);
                userNameTextField.requestFocus();
            } else {
                JLabel messageLable = new JLabel("Save Failed....");
                messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                JOptionPane.showMessageDialog(this, messageLable);
                passwordField.setText("");
                verifyPasswordField.setText("");
                passwordField.requestFocus();
            }
            if (parent instanceof SplashScreen) {
                this.dispose();
                ((SplashScreen)parent).setTimerStart();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void setSaveButtonEnability() {
        boolean condition = userNameTextField.getText().equals("") || passwordField.getText().equals("") || verifyPasswordField.getText().equals("");
        saveButton.setEnabled(!condition);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddUser dialog = new AddUser(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup accountTypeButtonGroup;
    private javax.swing.JLabel accountTypeLabel;
    private javax.swing.JRadioButton administratorRadioButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton limitedRadioButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JPasswordField verifyPasswordField;
    private javax.swing.JLabel verifyPasswordLabel;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
