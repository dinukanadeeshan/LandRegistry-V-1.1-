/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.user;

import controller.UserController;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.User;

/**
 *
 * @author Nadeeshan
 */
public class DeleteUser extends javax.swing.JDialog {

    /**
     * Creates new form DeleteUser
     */
    public DeleteUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        try {
            initUserInfoTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userInfoTable = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        reloadButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Remove User");

        userInfoTable.setFont(new java.awt.Font("Plantagenet Cherokee", 0, 17)); // NOI18N
        userInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Password", "Acc. Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userInfoTable);
        userInfoTable.getColumnModel().getColumn(1).setHeaderValue("Password");

        removeButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        reloadButton.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        reloadButton.setText("Reload");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(reloadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(cancelButton)
                    .addComponent(reloadButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        int selectedRow = userInfoTable.getSelectedRow();
        if (selectedRow == -1) {
            JLabel messageLable = new JLabel("Select a Row..");
            messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
            JOptionPane.showMessageDialog(this, messageLable);
        } else {
            String privilage = (String) userInfoTable.getValueAt(selectedRow, 2);
            if (privilage.equals("Limited")) {
                try {
                    System.out.println("a");
                    int res = UserController.deleteUser((String) userInfoTable.getValueAt(selectedRow, 0), (String) userInfoTable.getValueAt(selectedRow, 1));
                    System.out.println("b" + res);
                    if (res > 0) {
                        JLabel messageLable = new JLabel("User Deleted Successfully..");
                        messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                        JOptionPane.showMessageDialog(this, messageLable);
                        initUserInfoTable();
                    } else {
                        JLabel messageLable = new JLabel("User Deleted Fails..");
                        messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                        JOptionPane.showMessageDialog(this, messageLable);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                int x = 0;
                for (int i = 0; i < userInfoTable.getRowCount(); i++) {
                    if (i == selectedRow) {
                        continue;
                    } else {
                        if (((String) userInfoTable.getValueAt(i, 2)).equals("Administrator")) {
                            x++;
                        }
                    }
                }
                if (x > 0) {
                    try {
                        int res = UserController.deleteUser((String) userInfoTable.getValueAt(selectedRow, 0), (String) userInfoTable.getValueAt(selectedRow, 1));
                        if (res > 0) {
                            JLabel messageLable = new JLabel("User Deleted Successfully..");
                            messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                            JOptionPane.showMessageDialog(this, messageLable);
                            initUserInfoTable();
                        } else {
                            JLabel messageLable = new JLabel("User Deleted Fails..");
                            messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                            JOptionPane.showMessageDialog(this, messageLable);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JLabel messageLable = new JLabel("At least one Administrator User Acconut Should be there.. ");
                    messageLable.setFont(new Font("High Tower Text", Font.PLAIN, 18));
                    JOptionPane.showMessageDialog(this, messageLable);
                }
            }
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        try {
            initUserInfoTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DeleteUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reloadButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeleteUser dialog = new DeleteUser(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reloadButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JTable userInfoTable;
    // End of variables declaration//GEN-END:variables

    public void initUserInfoTable() throws ClassNotFoundException, SQLException {
        ArrayList<User> userList = UserController.getUserList();
        int rowCount = userInfoTable.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            ((DefaultTableModel) userInfoTable.getModel()).removeRow(0);
        }
        for (User user : userList) {
            ((DefaultTableModel) userInfoTable.getModel()).addRow(new Object[]{user.getUserName(), user.getPassword(), user.getPrivilage() == 0 ? "Administrator" : "Limited"});
        }
    }
}
